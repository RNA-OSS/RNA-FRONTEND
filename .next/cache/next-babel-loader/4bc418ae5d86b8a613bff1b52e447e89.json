{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/atoms/Span/index.jsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport * as Styled from \"./style\";\nimport { WEIGHT_S, WEIGHT_M, WEIGHT_L, WEIGHT_XL, TEXT_S, TEXT_M, TEXT_L } from \"../../../public/font\";\nimport { BLACK, MAIN_COLOR, DARK_GRAY, WARNING } from \"../../../public/color\";\nimport { CalculateBox } from \"../../../utils\";\nexport var SpanColor = {\n  BLACK: BLACK,\n  MAIN: MAIN_COLOR,\n  GRAY: DARK_GRAY,\n  WARNING: WARNING\n};\nexport var SpanSize = {\n  S: TEXT_S,\n  M: TEXT_M,\n  L: TEXT_L\n};\nexport var SpanWeight = {\n  S: WEIGHT_S,\n  M: WEIGHT_M,\n  L: WEIGHT_L,\n  XL: WEIGHT_XL\n};\n\nvar Span = function Span(_ref) {\n  var _ref$children = _ref.children,\n      children = _ref$children === void 0 ? \"\" : _ref$children,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? SpanSize.M : _ref$size,\n      _ref$weight = _ref.weight,\n      weight = _ref$weight === void 0 ? SpanWeight.M : _ref$weight,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? SpanType.BLACK : _ref$color,\n      _ref$mar = _ref.mar,\n      mar = _ref$mar === void 0 ? [0] : _ref$mar;\n  var margin = CalculateBox(mar);\n  return __jsx(Styled.Span, {\n    size: size,\n    weight: weight,\n    color: color,\n    margin: margin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_c = Span;\nSpan.propTypes = {\n  children: propTypes.node.isRequired,\n  size: propTypes.string,\n  weight: propTypes.number,\n  color: propTypes.string,\n  mar: propTypes.array\n};\nexport default Span;\n\nvar _c;\n\n$RefreshReg$(_c, \"Span\");","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/atoms/Span/index.jsx"],"names":["React","propTypes","Styled","WEIGHT_S","WEIGHT_M","WEIGHT_L","WEIGHT_XL","TEXT_S","TEXT_M","TEXT_L","BLACK","MAIN_COLOR","DARK_GRAY","WARNING","CalculateBox","SpanColor","MAIN","GRAY","SpanSize","S","M","L","SpanWeight","XL","Span","children","size","weight","color","SpanType","mar","margin","node","isRequired","string","number","array"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,SAAxB;AACA,SACEC,QADF,EAEEC,QAFF,EAGEC,QAHF,EAIEC,SAJF,EAKEC,MALF,EAMEC,MANF,EAOEC,MAPF,QAQO,sBARP;AASA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,OAAvC,QAAsD,uBAAtD;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,OAAO,IAAMC,SAAS,GAAG;AACvBL,EAAAA,KAAK,EAAEA,KADgB;AAEvBM,EAAAA,IAAI,EAAEL,UAFiB;AAGvBM,EAAAA,IAAI,EAAEL,SAHiB;AAIvBC,EAAAA,OAAO,EAAEA;AAJc,CAAlB;AAOP,OAAO,IAAMK,QAAQ,GAAG;AACtBC,EAAAA,CAAC,EAAEZ,MADmB;AAEtBa,EAAAA,CAAC,EAAEZ,MAFmB;AAGtBa,EAAAA,CAAC,EAAEZ;AAHmB,CAAjB;AAMP,OAAO,IAAMa,UAAU,GAAG;AACxBH,EAAAA,CAAC,EAAEhB,QADqB;AAExBiB,EAAAA,CAAC,EAAEhB,QAFqB;AAGxBiB,EAAAA,CAAC,EAAEhB,QAHqB;AAIxBkB,EAAAA,EAAE,EAAEjB;AAJoB,CAAnB;;AAOP,IAAMkB,IAAI,GAAG,SAAPA,IAAO,OAMP;AAAA,2BALJC,QAKI;AAAA,MALJA,QAKI,8BALO,EAKP;AAAA,uBAJJC,IAII;AAAA,MAJJA,IAII,0BAJGR,QAAQ,CAACE,CAIZ;AAAA,yBAHJO,MAGI;AAAA,MAHJA,MAGI,4BAHKL,UAAU,CAACF,CAGhB;AAAA,wBAFJQ,KAEI;AAAA,MAFJA,KAEI,2BAFIC,QAAQ,CAACnB,KAEb;AAAA,sBADJoB,GACI;AAAA,MADJA,GACI,yBADE,CAAC,CAAD,CACF;AACJ,MAAMC,MAAM,GAAGjB,YAAY,CAACgB,GAAD,CAA3B;AAEA,SACE,MAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,IAAI,EAAEJ,IAAnB;AAAyB,IAAA,MAAM,EAAEC,MAAjC;AAAyC,IAAA,KAAK,EAAEC,KAAhD;AAAuD,IAAA,MAAM,EAAEG,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,QADH,CADF;AAKD,CAdD;;KAAMD,I;AAgBNA,IAAI,CAACvB,SAAL,GAAiB;AACfwB,EAAAA,QAAQ,EAAExB,SAAS,CAAC+B,IAAV,CAAeC,UADV;AAEfP,EAAAA,IAAI,EAAEzB,SAAS,CAACiC,MAFD;AAGfP,EAAAA,MAAM,EAAE1B,SAAS,CAACkC,MAHH;AAIfP,EAAAA,KAAK,EAAE3B,SAAS,CAACiC,MAJF;AAKfJ,EAAAA,GAAG,EAAE7B,SAAS,CAACmC;AALA,CAAjB;AAQA,eAAeZ,IAAf","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\n\nimport * as Styled from \"./style\";\nimport {\n  WEIGHT_S,\n  WEIGHT_M,\n  WEIGHT_L,\n  WEIGHT_XL,\n  TEXT_S,\n  TEXT_M,\n  TEXT_L,\n} from \"../../../public/font\";\nimport { BLACK, MAIN_COLOR, DARK_GRAY, WARNING } from \"../../../public/color\";\nimport { CalculateBox } from \"../../../utils\";\n\nexport const SpanColor = {\n  BLACK: BLACK,\n  MAIN: MAIN_COLOR,\n  GRAY: DARK_GRAY,\n  WARNING: WARNING,\n};\n\nexport const SpanSize = {\n  S: TEXT_S,\n  M: TEXT_M,\n  L: TEXT_L,\n};\n\nexport const SpanWeight = {\n  S: WEIGHT_S,\n  M: WEIGHT_M,\n  L: WEIGHT_L,\n  XL: WEIGHT_XL,\n};\n\nconst Span = ({\n  children = \"\",\n  size = SpanSize.M,\n  weight = SpanWeight.M,\n  color = SpanType.BLACK,\n  mar = [0],\n}) => {\n  const margin = CalculateBox(mar);\n\n  return (\n    <Styled.Span size={size} weight={weight} color={color} margin={margin}>\n      {children}\n    </Styled.Span>\n  );\n};\n\nSpan.propTypes = {\n  children: propTypes.node.isRequired,\n  size: propTypes.string,\n  weight: propTypes.number,\n  color: propTypes.string,\n  mar: propTypes.array,\n};\n\nexport default Span;\n"]},"metadata":{},"sourceType":"module"}