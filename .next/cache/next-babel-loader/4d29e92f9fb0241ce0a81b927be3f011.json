{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/Group/index.jsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport * as Styled from \"./style\";\nimport List, { ListDirection, ListAlignOrder } from \"../../molecules/List\";\nimport ListItem, { ItemSelfOrder, ItemJustifyOrder } from \"../../molecules/ListItem\";\nimport Title, { TitleSize, TitleWeight } from \"../../atoms/Title\";\nimport Span, { SpanType } from \"../../atoms/Span\";\n\nvar Group = function Group() {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(List, {\n    card: true,\n    direction: ListDirection.col,\n    align: ListAlignOrder.center,\n    width: \"33%\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(ListItem, {\n    self: ItemSelfOrder.start,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(Styled.GroupState, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, \"D-1\")), __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(Title, {\n    size: TitleSize.s,\n    weight: TitleWeight.l,\n    marginBottom: \"1rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"Web Frontend Development\")), __jsx(ListItem, {\n    width: \"100%\",\n    justify: ItemJustifyOrder.between,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(Span, {\n    type: SpanType.gray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"\\uBA58\\uD1A0\"), __jsx(Span, {\n    type: SpanType.gray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"\\uC870\\uC7AC\\uAD8C\")), __jsx(ListItem, {\n    width: \"100%\",\n    justify: ItemJustifyOrder.between,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(Span, {\n    type: SpanType.gray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"\\uBAA8\\uC9D1\\uC778\\uC6D0\"), __jsx(Span, {\n    type: SpanType.gray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"10/40\")), __jsx(ListItem, {\n    width: \"100%\",\n    justify: ItemJustifyOrder.between,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(Span, {\n    type: SpanType.gray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"\\uD65C\\uB3D9\\uAE30\\uAC04\"), __jsx(Span, {\n    type: SpanType.gray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"20.06.13~20.06.13\"))));\n};\n\n_c = Group;\nexport default Group;\n\nvar _c;\n\n$RefreshReg$(_c, \"Group\");","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/Group/index.jsx"],"names":["React","Styled","List","ListDirection","ListAlignOrder","ListItem","ItemSelfOrder","ItemJustifyOrder","Title","TitleSize","TitleWeight","Span","SpanType","Group","col","center","start","s","l","between","gray"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,SAAxB;AACA,OAAOC,IAAP,IAAeC,aAAf,EAA8BC,cAA9B,QAAoD,sBAApD;AACA,OAAOC,QAAP,IACEC,aADF,EAEEC,gBAFF,QAGO,0BAHP;AAIA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,mBAA9C;AACA,OAAOC,IAAP,IAAeC,QAAf,QAA+B,kBAA/B;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,IAAI,EAAE,IADR;AAEE,IAAA,SAAS,EAAEV,aAAa,CAACW,GAF3B;AAGE,IAAA,KAAK,EAAEV,cAAc,CAACW,MAHxB;AAIE,IAAA,KAAK,EAAC,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,QAAD;AAAU,IAAA,IAAI,EAAET,aAAa,CAACU,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD,CAAQ,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CANF,EASE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAEP,SAAS,CAACQ,CAAvB;AAA0B,IAAA,MAAM,EAAEP,WAAW,CAACQ,CAA9C;AAAiD,IAAA,YAAY,EAAC,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CATF,EAcE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAC,MAAhB;AAAuB,IAAA,OAAO,EAAEX,gBAAgB,CAACY,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEP,QAAQ,CAACQ,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAER,QAAQ,CAACQ,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,CAdF,EAkBE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAC,MAAhB;AAAuB,IAAA,OAAO,EAAEb,gBAAgB,CAACY,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEP,QAAQ,CAACQ,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAER,QAAQ,CAACQ,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CAlBF,EAsBE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAC,MAAhB;AAAuB,IAAA,OAAO,EAAEb,gBAAgB,CAACY,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEP,QAAQ,CAACQ,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAER,QAAQ,CAACQ,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,CAtBF,CADF,CADF;AA+BD,CAhCD;;KAAMP,K;AAkCN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\n\nimport * as Styled from \"./style\";\nimport List, { ListDirection, ListAlignOrder } from \"../../molecules/List\";\nimport ListItem, {\n  ItemSelfOrder,\n  ItemJustifyOrder,\n} from \"../../molecules/ListItem\";\nimport Title, { TitleSize, TitleWeight } from \"../../atoms/Title\";\nimport Span, { SpanType } from \"../../atoms/Span\";\nconst Group = () => {\n  return (\n    <div>\n      <List\n        card={true}\n        direction={ListDirection.col}\n        align={ListAlignOrder.center}\n        width=\"33%\"\n      >\n        <ListItem self={ItemSelfOrder.start}>\n          <Styled.GroupState>D-1</Styled.GroupState>\n        </ListItem>\n        <ListItem>\n          <Title size={TitleSize.s} weight={TitleWeight.l} marginBottom=\"1rem\">\n            Web Frontend Development\n          </Title>\n        </ListItem>\n        <ListItem width=\"100%\" justify={ItemJustifyOrder.between}>\n          <Span type={SpanType.gray}>멘토</Span>\n          <Span type={SpanType.gray}>조재권</Span>\n        </ListItem>\n        <ListItem width=\"100%\" justify={ItemJustifyOrder.between}>\n          <Span type={SpanType.gray}>모집인원</Span>\n          <Span type={SpanType.gray}>10/40</Span>\n        </ListItem>\n        <ListItem width=\"100%\" justify={ItemJustifyOrder.between}>\n          <Span type={SpanType.gray}>활동기간</Span>\n          <Span type={SpanType.gray}>20.06.13~20.06.13</Span>\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Group;\n"]},"metadata":{},"sourceType":"module"}