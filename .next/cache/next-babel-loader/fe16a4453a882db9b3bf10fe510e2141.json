{"ast":null,"code":"var _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/Board/index.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport propTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Router, { useRouter } from \"next/router\";\nimport * as Styled from \"./style\";\nimport Title, { TitleSize, TitleWeight } from \"../../atoms/Title\";\nimport Table from \"../../molecules/Table\";\nimport Box, { BoxSort } from \"../../molecules/Box\";\nimport Span from \"../../atoms/Span\";\nimport Button, { ButtonFontSize } from \"../../atoms/Button\";\nimport { LOAD_POST_LISTS_REQUEST } from \"../../../reducers/post\";\nconst HeadData = [{\n  name: \"번호\",\n  width: \"auto\"\n}, {\n  name: \"제목\",\n  width: \"50%\"\n}, {\n  name: \"작성자\",\n  width: \"auto\"\n}, {\n  name: \"날짜\",\n  width: \"auto\"\n}];\n\nconst Board = () => {\n  const {\n    0: currentIndex,\n    1: setCurrentIndex\n  } = useState(1);\n  const dispatch = useDispatch();\n  const {\n    postLists,\n    isLoadedPostLists\n  } = useSelector(state => state.postReducer);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POST_LISTS_REQUEST\n    });\n  }, []);\n  const onClickPageIndexButton = useCallback(e => {\n    e.preventDefault();\n    setCurrentIndex(2);\n  }, []);\n  const onClickPreviousButton = useCallback(e => {\n    e.preventDefault();\n    setCurrentIndex(currentIndex - 1);\n  }, []);\n\n  const renderPageIndexButtons = () => {\n    return postLists.map((post, i) => __jsx(React.Fragment, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, i === currentIndex - 1 ? __jsx(Styled.CurrentPageButton, {\n      current: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, currentIndex) : __jsx(Styled.CurrentPageButton, {\n      onClick: onClickPageIndexButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, currentIndex + i), currentIndex + 4 < postLists.length && __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, __jsx(Span, {\n      mar: [0, 1.5, 0, 0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"...\"), __jsx(Styled.CurrentPageButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, postLists.length))));\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    sort: BoxSort.CENTER_LEFT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(Title, {\n    size: TitleSize.xs,\n    weight: TitleWeight.l,\n    mar: [2, 0, 2, 2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"\\uAC8C\\uC2DC\\uD310\")), __jsx(Box, {\n    sort: BoxSort.TOP_RIGHT,\n    mar: [0, 0, 2, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    width: \"100px\",\n    height: \"34px\",\n    fontSize: ButtonFontSize.S,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"\\uAE00\\uC4F0\\uAE30\")), isLoadedPostLists && __jsx(Styled.TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    headData: HeadData,\n    bodyData: postLists[currentIndex - 1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    sort: BoxSort.CENTER_CENTER,\n    mar: [2, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, currentIndex !== 1 && __jsx(Styled.PreviousButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 32\n    }\n  }), renderPageIndexButtons(), currentIndex !== postLists.length && __jsx(Styled.NextButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 47\n    }\n  })));\n};\n\nBoard.propTypes = {};\nexport default Board;","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/Board/index.jsx"],"names":["React","useState","useEffect","useCallback","propTypes","useDispatch","useSelector","Router","useRouter","Styled","Title","TitleSize","TitleWeight","Table","Box","BoxSort","Span","Button","ButtonFontSize","LOAD_POST_LISTS_REQUEST","HeadData","name","width","Board","currentIndex","setCurrentIndex","dispatch","postLists","isLoadedPostLists","state","postReducer","type","onClickPageIndexButton","e","preventDefault","onClickPreviousButton","renderPageIndexButtons","map","post","i","length","CENTER_LEFT","xs","l","TOP_RIGHT","S","CENTER_CENTER"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport propTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Router, { useRouter } from \"next/router\";\n\nimport * as Styled from \"./style\";\nimport Title, { TitleSize, TitleWeight } from \"../../atoms/Title\";\nimport Table from \"../../molecules/Table\";\nimport Box, { BoxSort } from \"../../molecules/Box\";\nimport Span from \"../../atoms/Span\";\nimport Button, { ButtonFontSize } from \"../../atoms/Button\";\nimport { LOAD_POST_LISTS_REQUEST } from \"../../../reducers/post\";\n\nconst HeadData = [\n  { name: \"번호\", width: \"auto\" },\n  { name: \"제목\", width: \"50%\" },\n  { name: \"작성자\", width: \"auto\" },\n  { name: \"날짜\", width: \"auto\" },\n];\n\nconst Board = () => {\n  const [currentIndex, setCurrentIndex] = useState(1);\n  const dispatch = useDispatch();\n  const { postLists, isLoadedPostLists } = useSelector(\n    (state) => state.postReducer\n  );\n\n  useEffect(() => {\n    dispatch({ type: LOAD_POST_LISTS_REQUEST });\n  }, []);\n\n  const onClickPageIndexButton = useCallback((e) => {\n    e.preventDefault();\n    setCurrentIndex(2);\n  }, []);\n\n  const onClickPreviousButton = useCallback((e) => {\n    e.preventDefault();\n    setCurrentIndex(currentIndex - 1);\n  }, []);\n\n  const renderPageIndexButtons = () => {\n    return postLists.map((post, i) => (\n      <React.Fragment key={i}>\n        {i === currentIndex - 1 ? (\n          <Styled.CurrentPageButton current>\n            {currentIndex}\n          </Styled.CurrentPageButton>\n        ) : (\n          <Styled.CurrentPageButton onClick={onClickPageIndexButton}>\n            {currentIndex + i}\n          </Styled.CurrentPageButton>\n        )}\n        {currentIndex + 4 < postLists.length && (\n          <React.Fragment>\n            <Span mar={[0, 1.5, 0, 0]}>...</Span>\n            <Styled.CurrentPageButton>\n              {postLists.length}\n            </Styled.CurrentPageButton>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    ));\n  };\n\n  return (\n    <React.Fragment>\n      <Box sort={BoxSort.CENTER_LEFT}>\n        <Title size={TitleSize.xs} weight={TitleWeight.l} mar={[2, 0, 2, 2]}>\n          게시판\n        </Title>\n      </Box>\n      <Box sort={BoxSort.TOP_RIGHT} mar={[0, 0, 2, 0]}>\n        <Button width=\"100px\" height=\"34px\" fontSize={ButtonFontSize.S}>\n          글쓰기\n        </Button>\n      </Box>\n      {isLoadedPostLists && (\n        <Styled.TableContainer>\n          <Table headData={HeadData} bodyData={postLists[currentIndex - 1]} />\n        </Styled.TableContainer>\n      )}\n\n      <Box sort={BoxSort.CENTER_CENTER} mar={[2, 0]}>\n        {currentIndex !== 1 && <Styled.PreviousButton />}\n        {renderPageIndexButtons()}\n        {currentIndex !== postLists.length && <Styled.NextButton />}\n      </Box>\n    </React.Fragment>\n  );\n};\n\nBoard.propTypes = {};\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}