{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useReducer } from \"react\";\n\nfunction reducer(state, action) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    [action.name]: action.value\n  });\n}\n\nexport default function useInputs(initialForm) {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialForm);\n\n  const onChange = e => {\n    dispatch(e.target);\n  };\n\n  return [state, onChange];\n}","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/hooks/useInput.jsx"],"names":["useReducer","reducer","state","action","name","value","useInputs","initialForm","dispatch","onChange","e","target"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,yCACKD,KADL;AAEE,KAACC,MAAM,CAACC,IAAR,GAAeD,MAAM,CAACE;AAFxB;AAID;;AAED,eAAe,SAASC,SAAT,CAAmBC,WAAnB,EAAgC;AAC7C,QAAM;AAAA,OAACL,KAAD;AAAA,OAAQM;AAAR,MAAoBR,UAAU,CAACC,OAAD,EAAUM,WAAV,CAApC;;AACA,QAAME,QAAQ,GAAIC,CAAD,IAAO;AACtBF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAH,CAAR;AACD,GAFD;;AAGA,SAAO,CAACT,KAAD,EAAQO,QAAR,CAAP;AACD","sourcesContent":["import { useReducer } from \"react\";\n\nfunction reducer(state, action) {\n  return {\n    ...state,\n    [action.name]: action.value,\n  };\n}\n\nexport default function useInputs(initialForm) {\n  const [state, dispatch] = useReducer(reducer, initialForm);\n  const onChange = (e) => {\n    dispatch(e.target);\n  };\n  return [state, onChange];\n}\n"]},"metadata":{},"sourceType":"module"}