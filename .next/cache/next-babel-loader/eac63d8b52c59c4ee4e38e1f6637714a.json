{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/molecules/Box/index.jsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport * as Styled from \"./style\";\nimport { CalculateSort, CalculateBox, CalculateFlexAttribute } from \"../../../utils\";\nexport var BoxDirection = {\n  ROW: \"row\",\n  COL: \"column\"\n};\nexport var BoxSort = {\n  TOP_LEFT: 11,\n  TOP_CENTER: 12,\n  TOP_RIGHT: 13,\n  TOP_SPACE_BETWEEN: 14,\n  TOP_SPACE_AROUND: 15,\n  CENTER_LEFT: 21,\n  CENTER_CENTER: 22,\n  CENTER_RIGHT: 23,\n  CENTER_SPACE_BETWEEN: 24,\n  CENTER_SPACE_AROUND: 25,\n  BOTTOM_LEFT: 31,\n  BOTTOM_CENTER: 32,\n  BOTTOM_RIGHT: 33,\n  BOTTOM_SPACE_BETWEEN: 34,\n  BOTTOM_SPACE_AROUND: 35,\n  SPACE_BETWEEN_LEFT: 41,\n  SPACE_BETWEEN_CENTER: 42,\n  SPACE_BETWEEN_RIGHT: 43,\n  SPACE_AROUND_LEFT: 51,\n  SPACE_AROUND_CENTER: 52,\n  SPACE_AROUND_RIGHT: 53\n};\nexport var BoxWrap = {\n  WRAP: \"wrap\",\n  NOWRAP: \"nowrap\"\n};\n\nvar Box = function Box(_ref) {\n  var children = _ref.children,\n      _ref$direction = _ref.direction,\n      direction = _ref$direction === void 0 ? BoxDirection.ROW : _ref$direction,\n      _ref$sort = _ref.sort,\n      sort = _ref$sort === void 0 ? BoxSort.CENTER_CENTER : _ref$sort,\n      _ref$mar = _ref.mar,\n      mar = _ref$mar === void 0 ? [0] : _ref$mar,\n      _ref$pad = _ref.pad,\n      pad = _ref$pad === void 0 ? [0] : _ref$pad,\n      _ref$flexAttr = _ref.flexAttr,\n      flexAttr = _ref$flexAttr === void 0 ? [\"none\"] : _ref$flexAttr,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? \"100%\" : _ref$width,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? \"auto\" : _ref$height,\n      _ref$wrap = _ref.wrap,\n      wrap = _ref$wrap === void 0 ? BoxWrap.NOWRAP : _ref$wrap,\n      _ref$card = _ref.card,\n      card = _ref$card === void 0 ? false : _ref$card;\n\n  var _CalculateSort = CalculateSort(sort),\n      _CalculateSort2 = _slicedToArray(_CalculateSort, 2),\n      horizontal = _CalculateSort2[0],\n      vertical = _CalculateSort2[1];\n\n  var justifyContent = direction === BoxDirection.ROW ? horizontal : vertical;\n  var alignItems = direction === BoxDirection.ROW ? vertical : horizontal;\n  var flex = CalculateFlexAttribute(flexAttr);\n  var margin = CalculateBox(mar);\n  var padding = CalculateBox(pad);\n  return __jsx(Styled.Box, {\n    direction: direction,\n    justify: justifyContent,\n    align: alignItems,\n    margin: margin,\n    padding: padding,\n    width: width,\n    height: height,\n    flex: flex,\n    wrap: wrap,\n    card: card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_c = Box;\nBox.propTypes = {\n  children: propTypes.node.isRequired,\n  direction: propTypes.string,\n  sort: propTypes.number,\n  mar: propTypes.array,\n  pad: propTypes.array,\n  flexAttr: propTypes.array,\n  width: propTypes.string,\n  height: propTypes.string,\n  wrap: propTypes.string,\n  card: propTypes.bool\n};\nexport default Box;\n\nvar _c;\n\n$RefreshReg$(_c, \"Box\");","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/molecules/Box/index.jsx"],"names":["React","propTypes","Styled","CalculateSort","CalculateBox","CalculateFlexAttribute","BoxDirection","ROW","COL","BoxSort","TOP_LEFT","TOP_CENTER","TOP_RIGHT","TOP_SPACE_BETWEEN","TOP_SPACE_AROUND","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","CENTER_SPACE_BETWEEN","CENTER_SPACE_AROUND","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","BOTTOM_SPACE_BETWEEN","BOTTOM_SPACE_AROUND","SPACE_BETWEEN_LEFT","SPACE_BETWEEN_CENTER","SPACE_BETWEEN_RIGHT","SPACE_AROUND_LEFT","SPACE_AROUND_CENTER","SPACE_AROUND_RIGHT","BoxWrap","WRAP","NOWRAP","Box","children","direction","sort","mar","pad","flexAttr","width","height","wrap","card","horizontal","vertical","justifyContent","alignItems","flex","margin","padding","node","isRequired","string","number","array","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\n\nimport * as Styled from \"./style\";\nimport {\n  CalculateSort,\n  CalculateBox,\n  CalculateFlexAttribute,\n} from \"../../../utils\";\n\nexport const BoxDirection = {\n  ROW: \"row\",\n  COL: \"column\",\n};\n\nexport const BoxSort = {\n  TOP_LEFT: 11,\n  TOP_CENTER: 12,\n  TOP_RIGHT: 13,\n  TOP_SPACE_BETWEEN: 14,\n  TOP_SPACE_AROUND: 15,\n  CENTER_LEFT: 21,\n  CENTER_CENTER: 22,\n  CENTER_RIGHT: 23,\n  CENTER_SPACE_BETWEEN: 24,\n  CENTER_SPACE_AROUND: 25,\n  BOTTOM_LEFT: 31,\n  BOTTOM_CENTER: 32,\n  BOTTOM_RIGHT: 33,\n  BOTTOM_SPACE_BETWEEN: 34,\n  BOTTOM_SPACE_AROUND: 35,\n  SPACE_BETWEEN_LEFT: 41,\n  SPACE_BETWEEN_CENTER: 42,\n  SPACE_BETWEEN_RIGHT: 43,\n  SPACE_AROUND_LEFT: 51,\n  SPACE_AROUND_CENTER: 52,\n  SPACE_AROUND_RIGHT: 53,\n};\n\nexport const BoxWrap = {\n  WRAP: \"wrap\",\n  NOWRAP: \"nowrap\",\n};\n\nconst Box = ({\n  children,\n  direction = BoxDirection.ROW,\n  sort = BoxSort.CENTER_CENTER,\n  mar = [0],\n  pad = [0],\n  flexAttr = [\"none\"],\n  width = \"100%\",\n  height = \"auto\",\n  wrap = BoxWrap.NOWRAP,\n  card = false,\n}) => {\n  const [horizontal, vertical] = CalculateSort(sort);\n\n  const justifyContent = direction === BoxDirection.ROW ? horizontal : vertical;\n  const alignItems = direction === BoxDirection.ROW ? vertical : horizontal;\n  const flex = CalculateFlexAttribute(flexAttr);\n  const margin = CalculateBox(mar);\n  const padding = CalculateBox(pad);\n\n  return (\n    <Styled.Box\n      direction={direction}\n      justify={justifyContent}\n      align={alignItems}\n      margin={margin}\n      padding={padding}\n      width={width}\n      height={height}\n      flex={flex}\n      wrap={wrap}\n      card={card}\n    >\n      {children}\n    </Styled.Box>\n  );\n};\n\nBox.propTypes = {\n  children: propTypes.node.isRequired,\n  direction: propTypes.string,\n  sort: propTypes.number,\n  mar: propTypes.array,\n  pad: propTypes.array,\n  flexAttr: propTypes.array,\n  width: propTypes.string,\n  height: propTypes.string,\n  wrap: propTypes.string,\n  card: propTypes.bool,\n};\n\nexport default Box;\n"]},"metadata":{},"sourceType":"module"}