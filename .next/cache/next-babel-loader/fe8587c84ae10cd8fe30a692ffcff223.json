{"ast":null,"code":"export var CalculateSort = function CalculateSort(sort) {\n  var horizontalNumber = sort % 10;\n  var verticalNumber = Math.floor(sort / 10);\n  var horizontal = \"center\";\n  var vertical = \"center\";\n  if (horizontalNumber === 1) horizontal = \"flex-start\";else if (horizontalNumber === 3) horizontal = \"flex-end\";else if (horizontalNumber === 4) horizontal = \"space-between\";else if (horizontalNumber === 5) horizontal = \"space-around\";\n  if (verticalNumber === 1) vertical = \"flex-start\";else if (verticalNumber === 3) vertical = \"flex-end\";else if (verticalNumber === 4) vertical = \"space-between\";else if (verticalNumber === 5) vertical = \"space-around\";\n  return [horizontal, vertical];\n}; //컴포넌트로 입력받은 padding과 margin으로 입력된 값을 설정한다.\n\n_c = CalculateSort;\nexport var CalculateBox = function CalculateBox(targetArr) {\n  var resultArr = [targetArr[0], targetArr[0], targetArr[0], targetArr[0]];\n\n  if (targetArr.length === 2) {\n    if (targetArr[1] !== undefined) resultArr = [targetArr[0], targetArr[1], targetArr[0], targetArr[1]];\n  } else if (targetArr.length === 3) {\n    if (targetArr[1] !== undefined && targetArr[2] !== undefined) resultArr = [targetArr[0], targetArr[1], targetArr[2], targetArr[1]];\n  } else if (targetArr.length === 4) {\n    if (targetArr[1] !== undefined && targetArr[2] !== undefined && targetArr[3] !== undefined) resultArr = [targetArr[0], targetArr[1], targetArr[2], targetArr[3]];\n  }\n\n  return \"\".concat(resultArr.toString().replace(/,/gi, \"rem \"), \"rem\");\n};\n_c2 = CalculateBox;\nexport var CalculateFlexAttribute = function CalculateFlexAttribute(targetArr) {\n  var resultString = \"\".concat(targetArr[0]);\n\n  if (targetArr.length > 2) {\n    resultString = \"\".concat(targetArr.toString().replace(/,/gi, \" \"));\n  }\n\n  return resultString;\n};\n_c3 = CalculateFlexAttribute;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CalculateSort\");\n$RefreshReg$(_c2, \"CalculateBox\");\n$RefreshReg$(_c3, \"CalculateFlexAttribute\");","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/utils/index.js"],"names":["CalculateSort","sort","horizontalNumber","verticalNumber","Math","floor","horizontal","vertical","CalculateBox","targetArr","resultArr","length","undefined","toString","replace","CalculateFlexAttribute","resultString"],"mappings":"AAAA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AACrC,MAAMC,gBAAgB,GAAGD,IAAI,GAAG,EAAhC;AACA,MAAME,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAI,GAAG,EAAlB,CAAvB;AAEA,MAAIK,UAAU,GAAG,QAAjB;AACA,MAAIC,QAAQ,GAAG,QAAf;AAEA,MAAIL,gBAAgB,KAAK,CAAzB,EAA4BI,UAAU,GAAG,YAAb,CAA5B,KACK,IAAIJ,gBAAgB,KAAK,CAAzB,EAA4BI,UAAU,GAAG,UAAb,CAA5B,KACA,IAAIJ,gBAAgB,KAAK,CAAzB,EAA4BI,UAAU,GAAG,eAAb,CAA5B,KACA,IAAIJ,gBAAgB,KAAK,CAAzB,EAA4BI,UAAU,GAAG,cAAb;AAEjC,MAAIH,cAAc,KAAK,CAAvB,EAA0BI,QAAQ,GAAG,YAAX,CAA1B,KACK,IAAIJ,cAAc,KAAK,CAAvB,EAA0BI,QAAQ,GAAG,UAAX,CAA1B,KACA,IAAIJ,cAAc,KAAK,CAAvB,EAA0BI,QAAQ,GAAG,eAAX,CAA1B,KACA,IAAIJ,cAAc,KAAK,CAAvB,EAA0BI,QAAQ,GAAG,cAAX;AAE/B,SAAO,CAACD,UAAD,EAAaC,QAAb,CAAP;AACD,CAlBM,C,CAoBP;;KApBaP,a;AAqBb,OAAO,IAAMQ,YAAY,GAAG,SAAfA,YAAe,CAACC,SAAD,EAAe;AACzC,MAAIC,SAAS,GAAG,CAACD,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,EAA6BA,SAAS,CAAC,CAAD,CAAtC,EAA2CA,SAAS,CAAC,CAAD,CAApD,CAAhB;;AAEA,MAAIA,SAAS,CAACE,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,QAAIF,SAAS,CAAC,CAAD,CAAT,KAAiBG,SAArB,EACEF,SAAS,GAAG,CAACD,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,EAA6BA,SAAS,CAAC,CAAD,CAAtC,EAA2CA,SAAS,CAAC,CAAD,CAApD,CAAZ;AACH,GAHD,MAGO,IAAIA,SAAS,CAACE,MAAV,KAAqB,CAAzB,EAA4B;AACjC,QAAIF,SAAS,CAAC,CAAD,CAAT,KAAiBG,SAAjB,IAA8BH,SAAS,CAAC,CAAD,CAAT,KAAiBG,SAAnD,EACEF,SAAS,GAAG,CAACD,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,EAA6BA,SAAS,CAAC,CAAD,CAAtC,EAA2CA,SAAS,CAAC,CAAD,CAApD,CAAZ;AACH,GAHM,MAGA,IAAIA,SAAS,CAACE,MAAV,KAAqB,CAAzB,EAA4B;AACjC,QACEF,SAAS,CAAC,CAAD,CAAT,KAAiBG,SAAjB,IACAH,SAAS,CAAC,CAAD,CAAT,KAAiBG,SADjB,IAEAH,SAAS,CAAC,CAAD,CAAT,KAAiBG,SAHnB,EAKEF,SAAS,GAAG,CAACD,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,EAA6BA,SAAS,CAAC,CAAD,CAAtC,EAA2CA,SAAS,CAAC,CAAD,CAApD,CAAZ;AACH;;AAED,mBAAUC,SAAS,CAACG,QAAV,GAAqBC,OAArB,CAA6B,KAA7B,EAAoC,MAApC,CAAV;AACD,CAnBM;MAAMN,Y;AAqBb,OAAO,IAAMO,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACN,SAAD,EAAe;AACnD,MAAIO,YAAY,aAAMP,SAAS,CAAC,CAAD,CAAf,CAAhB;;AAEA,MAAIA,SAAS,CAACE,MAAV,GAAmB,CAAvB,EAA0B;AACxBK,IAAAA,YAAY,aAAMP,SAAS,CAACI,QAAV,GAAqBC,OAArB,CAA6B,KAA7B,EAAoC,GAApC,CAAN,CAAZ;AACD;;AACD,SAAOE,YAAP;AACD,CAPM;MAAMD,sB","sourcesContent":["export const CalculateSort = (sort) => {\n  const horizontalNumber = sort % 10;\n  const verticalNumber = Math.floor(sort / 10);\n\n  let horizontal = \"center\";\n  let vertical = \"center\";\n\n  if (horizontalNumber === 1) horizontal = \"flex-start\";\n  else if (horizontalNumber === 3) horizontal = \"flex-end\";\n  else if (horizontalNumber === 4) horizontal = \"space-between\";\n  else if (horizontalNumber === 5) horizontal = \"space-around\";\n\n  if (verticalNumber === 1) vertical = \"flex-start\";\n  else if (verticalNumber === 3) vertical = \"flex-end\";\n  else if (verticalNumber === 4) vertical = \"space-between\";\n  else if (verticalNumber === 5) vertical = \"space-around\";\n\n  return [horizontal, vertical];\n};\n\n//컴포넌트로 입력받은 padding과 margin으로 입력된 값을 설정한다.\nexport const CalculateBox = (targetArr) => {\n  let resultArr = [targetArr[0], targetArr[0], targetArr[0], targetArr[0]];\n\n  if (targetArr.length === 2) {\n    if (targetArr[1] !== undefined)\n      resultArr = [targetArr[0], targetArr[1], targetArr[0], targetArr[1]];\n  } else if (targetArr.length === 3) {\n    if (targetArr[1] !== undefined && targetArr[2] !== undefined)\n      resultArr = [targetArr[0], targetArr[1], targetArr[2], targetArr[1]];\n  } else if (targetArr.length === 4) {\n    if (\n      targetArr[1] !== undefined &&\n      targetArr[2] !== undefined &&\n      targetArr[3] !== undefined\n    )\n      resultArr = [targetArr[0], targetArr[1], targetArr[2], targetArr[3]];\n  }\n\n  return `${resultArr.toString().replace(/,/gi, \"rem \")}rem`;\n};\n\nexport const CalculateFlexAttribute = (targetArr) => {\n  let resultString = `${targetArr[0]}`;\n\n  if (targetArr.length > 2) {\n    resultString = `${targetArr.toString().replace(/,/gi, \" \")}`;\n  }\n  return resultString;\n};\n"]},"metadata":{},"sourceType":"module"}