{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/atoms/Span/index.jsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport * as Styled from \"./style\";\nimport { WEIGHT_S, WEIGHT_M, WEIGHT_L, WEIGHT_XL, TEXT_S, TEXT_M, TEXT_L } from \"../../../public/font\";\nimport { BLACK, MAIN_COLOR, DARK_GRAY, WARNING } from \"../../../public/color\";\nexport var SpanType = {\n  normal: BLACK,\n  primary: MAIN_COLOR,\n  gray: DARK_GRAY,\n  warn: WARNING\n};\nexport var SpanSize = {\n  s: TEXT_S,\n  m: TEXT_M,\n  l: TEXT_L\n};\nexport var SpanWeight = {\n  s: WEIGHT_S,\n  m: WEIGHT_M,\n  l: WEIGHT_L,\n  xl: WEIGHT_XL\n};\n\nvar Span = function Span(_ref) {\n  var _ref$children = _ref.children,\n      children = _ref$children === void 0 ? \"\" : _ref$children,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? SpanSize.m : _ref$size,\n      _ref$weight = _ref.weight,\n      weight = _ref$weight === void 0 ? SpanWeight.m : _ref$weight,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? SpanType.normal : _ref$type,\n      _ref$marginBottom = _ref.marginBottom,\n      marginBottom = _ref$marginBottom === void 0 ? \"0px\" : _ref$marginBottom;\n  return __jsx(Styled.Span, {\n    size: size,\n    weight: weight,\n    type: type,\n    marginBottom: marginBottom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_c = Span;\nSpan.propTypes = {\n  children: propTypes.string,\n  size: propTypes.string,\n  weight: propTypes.number,\n  type: propTypes.string,\n  marginBottom: propTypes.string\n};\nexport default Span;\n\nvar _c;\n\n$RefreshReg$(_c, \"Span\");","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/atoms/Span/index.jsx"],"names":["React","propTypes","Styled","WEIGHT_S","WEIGHT_M","WEIGHT_L","WEIGHT_XL","TEXT_S","TEXT_M","TEXT_L","BLACK","MAIN_COLOR","DARK_GRAY","WARNING","SpanType","normal","primary","gray","warn","SpanSize","s","m","l","SpanWeight","xl","Span","children","size","weight","type","marginBottom","string","number"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,MAAZ,MAAwB,SAAxB;AACA,SACEC,QADF,EAEEC,QAFF,EAGEC,QAHF,EAIEC,SAJF,EAKEC,MALF,EAMEC,MANF,EAOEC,MAPF,QAQO,sBARP;AASA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,OAAvC,QAAsD,uBAAtD;AAEA,OAAO,IAAMC,QAAQ,GAAG;AACtBC,EAAAA,MAAM,EAAEL,KADc;AAEtBM,EAAAA,OAAO,EAAEL,UAFa;AAGtBM,EAAAA,IAAI,EAAEL,SAHgB;AAItBM,EAAAA,IAAI,EAAEL;AAJgB,CAAjB;AAOP,OAAO,IAAMM,QAAQ,GAAG;AACtBC,EAAAA,CAAC,EAAEb,MADmB;AAEtBc,EAAAA,CAAC,EAAEb,MAFmB;AAGtBc,EAAAA,CAAC,EAAEb;AAHmB,CAAjB;AAMP,OAAO,IAAMc,UAAU,GAAG;AACxBH,EAAAA,CAAC,EAAEjB,QADqB;AAExBkB,EAAAA,CAAC,EAAEjB,QAFqB;AAGxBkB,EAAAA,CAAC,EAAEjB,QAHqB;AAIxBmB,EAAAA,EAAE,EAAElB;AAJoB,CAAnB;;AAOP,IAAMmB,IAAI,GAAG,SAAPA,IAAO,OAMP;AAAA,2BALJC,QAKI;AAAA,MALJA,QAKI,8BALO,EAKP;AAAA,uBAJJC,IAII;AAAA,MAJJA,IAII,0BAJGR,QAAQ,CAACE,CAIZ;AAAA,yBAHJO,MAGI;AAAA,MAHJA,MAGI,4BAHKL,UAAU,CAACF,CAGhB;AAAA,uBAFJQ,IAEI;AAAA,MAFJA,IAEI,0BAFGf,QAAQ,CAACC,MAEZ;AAAA,+BADJe,YACI;AAAA,MADJA,YACI,kCADW,KACX;AACJ,SACE,MAAC,MAAD,CAAQ,IAAR;AACE,IAAA,IAAI,EAAEH,IADR;AAEE,IAAA,MAAM,EAAEC,MAFV;AAGE,IAAA,IAAI,EAAEC,IAHR;AAIE,IAAA,YAAY,EAAEC,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGJ,QANH,CADF;AAUD,CAjBD;;KAAMD,I;AAmBNA,IAAI,CAACxB,SAAL,GAAiB;AACfyB,EAAAA,QAAQ,EAAEzB,SAAS,CAAC8B,MADL;AAEfJ,EAAAA,IAAI,EAAE1B,SAAS,CAAC8B,MAFD;AAGfH,EAAAA,MAAM,EAAE3B,SAAS,CAAC+B,MAHH;AAIfH,EAAAA,IAAI,EAAE5B,SAAS,CAAC8B,MAJD;AAKfD,EAAAA,YAAY,EAAE7B,SAAS,CAAC8B;AALT,CAAjB;AAQA,eAAeN,IAAf","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\nimport * as Styled from \"./style\";\nimport {\n  WEIGHT_S,\n  WEIGHT_M,\n  WEIGHT_L,\n  WEIGHT_XL,\n  TEXT_S,\n  TEXT_M,\n  TEXT_L,\n} from \"../../../public/font\";\nimport { BLACK, MAIN_COLOR, DARK_GRAY, WARNING } from \"../../../public/color\";\n\nexport const SpanType = {\n  normal: BLACK,\n  primary: MAIN_COLOR,\n  gray: DARK_GRAY,\n  warn: WARNING,\n};\n\nexport const SpanSize = {\n  s: TEXT_S,\n  m: TEXT_M,\n  l: TEXT_L,\n};\n\nexport const SpanWeight = {\n  s: WEIGHT_S,\n  m: WEIGHT_M,\n  l: WEIGHT_L,\n  xl: WEIGHT_XL,\n};\n\nconst Span = ({\n  children = \"\",\n  size = SpanSize.m,\n  weight = SpanWeight.m,\n  type = SpanType.normal,\n  marginBottom = \"0px\",\n}) => {\n  return (\n    <Styled.Span\n      size={size}\n      weight={weight}\n      type={type}\n      marginBottom={marginBottom}\n    >\n      {children}\n    </Styled.Span>\n  );\n};\n\nSpan.propTypes = {\n  children: propTypes.string,\n  size: propTypes.string,\n  weight: propTypes.number,\n  type: propTypes.string,\n  marginBottom: propTypes.string,\n};\n\nexport default Span;\n"]},"metadata":{},"sourceType":"module"}