{"ast":null,"code":"var _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/Comment/index.jsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport * as Styled from \"./style\";\nimport Box, { BoxSort } from \"../../molecules/Box\";\nimport Span, { SpanWeight, SpanColor } from \"../../atoms/Span\";\nimport Input from \"../../atoms/Input\";\n\nconst Comment = ({\n  commentLists\n}) => {\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, commentLists && commentLists.map(comment => !comment.responseTo && __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 47\n    }\n  })), __jsx(Styled.CommentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    sort: BoxSort.CENTER_SPACE_BETWEEN,\n    mar: [0, 0, 1, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(Span, {\n    weight: SpanWeight.L,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, \"\\uD638\\uD638\\uD638\\uC7BC\\uB204\\uCFE4\"), __jsx(Span, {\n    color: SpanColor.GRAY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, \"100/1000\")), __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  })));\n};\n\nComment.propTypes = {\n  commentLists: propTypes.array\n};\nexport default Comment;","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/Comment/index.jsx"],"names":["React","propTypes","Styled","Box","BoxSort","Span","SpanWeight","SpanColor","Input","Comment","commentLists","map","comment","responseTo","CENTER_SPACE_BETWEEN","L","GRAY","array"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,SAAxB;AACA,OAAOC,GAAP,IAAcC,OAAd,QAA6B,qBAA7B;AACA,OAAOC,IAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA4C,kBAA5C;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AACpC,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,YAAY,IACXA,YAAY,CAACC,GAAb,CACGC,OAAD,IAAa,CAACA,OAAO,CAACC,UAAT,IAAuB,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtC,CAFJ,EAME,MAAC,MAAD,CAAQ,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAET,OAAO,CAACU,oBAAnB;AAAyC,IAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,MAAM,EAAER,UAAU,CAACS,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,EAEE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAER,SAAS,CAACS,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,EAKE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CANF,CADF;AAgBD,CAjBD;;AAmBAP,OAAO,CAACR,SAAR,GAAoB;AAClBS,EAAAA,YAAY,EAAET,SAAS,CAACgB;AADN,CAApB;AAIA,eAAeR,OAAf","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\n\nimport * as Styled from \"./style\";\nimport Box, { BoxSort } from \"../../molecules/Box\";\nimport Span, { SpanWeight, SpanColor } from \"../../atoms/Span\";\nimport Input from \"../../atoms/Input\";\n\nconst Comment = ({ commentLists }) => {\n  return (\n    <React.Fragment>\n      {commentLists &&\n        commentLists.map(\n          (comment) => !comment.responseTo && <React.Fragment></React.Fragment>\n        )}\n\n      <Styled.CommentContainer>\n        <Box sort={BoxSort.CENTER_SPACE_BETWEEN} mar={[0, 0, 1, 0]}>\n          <Span weight={SpanWeight.L}>호호호잼누쿤</Span>\n          <Span color={SpanColor.GRAY}>100/1000</Span>\n        </Box>\n        <Input />\n      </Styled.CommentContainer>\n    </React.Fragment>\n  );\n};\n\nComment.propTypes = {\n  commentLists: propTypes.array,\n};\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}