{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/atoms/Input/index.jsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport * as Styled from \"./style\";\n\nvar Input = function Input(_ref) {\n  var _ref$option = _ref.option,\n      _ref$option$type = _ref$option.type,\n      type = _ref$option$type === void 0 ? \"text\" : _ref$option$type,\n      _ref$option$value = _ref$option.value,\n      value = _ref$option$value === void 0 ? \"\" : _ref$option$value,\n      onChange = _ref$option.onChange,\n      onFocus = _ref$option.onFocus,\n      _ref$option$placehold = _ref$option.placeholder,\n      placeholder = _ref$option$placehold === void 0 ? \"\" : _ref$option$placehold;\n  return __jsx(React.Fragment, null, __jsx(Styled.Input, {\n    type: option.type,\n    value: option.value,\n    onChange: option.onChange,\n    onFocus: option.onFocus,\n    placeholder: option.placeholder,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c = Input;\nInput.prototype = {\n  option: propTypes.shape({\n    type: propTypes.string,\n    value: propTypes.any,\n    onChange: propTypes.func,\n    onFocus: propTypes.func,\n    placeholder: propTypes.string\n  })\n};\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/atoms/Input/index.jsx"],"names":["React","propTypes","Styled","Input","option","type","value","onChange","onFocus","placeholder","prototype","shape","string","any","func"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,SAAxB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAER;AAAA,yBADJC,MACI;AAAA,qCADMC,IACN;AAAA,MADMA,IACN,iCADa,MACb;AAAA,sCADqBC,KACrB;AAAA,MADqBA,KACrB,kCAD6B,EAC7B;AAAA,MADiCC,QACjC,eADiCA,QACjC;AAAA,MAD2CC,OAC3C,eAD2CA,OAC3C;AAAA,0CADoDC,WACpD;AAAA,MADoDA,WACpD,sCADkE,EAClE;AACJ,SACE,4BACE,MAAC,MAAD,CAAQ,KAAR;AACE,IAAA,IAAI,EAAEL,MAAM,CAACC,IADf;AAEE,IAAA,KAAK,EAAED,MAAM,CAACE,KAFhB;AAGE,IAAA,QAAQ,EAAEF,MAAM,CAACG,QAHnB;AAIE,IAAA,OAAO,EAAEH,MAAM,CAACI,OAJlB;AAKE,IAAA,WAAW,EAAEJ,MAAM,CAACK,WALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAWD,CAdD;;KAAMN,K;AAgBNA,KAAK,CAACO,SAAN,GAAkB;AAChBN,EAAAA,MAAM,EAAEH,SAAS,CAACU,KAAV,CAAgB;AACtBN,IAAAA,IAAI,EAAEJ,SAAS,CAACW,MADM;AAEtBN,IAAAA,KAAK,EAAEL,SAAS,CAACY,GAFK;AAGtBN,IAAAA,QAAQ,EAAEN,SAAS,CAACa,IAHE;AAItBN,IAAAA,OAAO,EAAEP,SAAS,CAACa,IAJG;AAKtBL,IAAAA,WAAW,EAAER,SAAS,CAACW;AALD,GAAhB;AADQ,CAAlB;AAUA,eAAeT,KAAf","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\n\nimport * as Styled from \"./style\";\n\nconst Input = ({\n  option: { type = \"text\", value = \"\", onChange, onFocus, placeholder = \"\" },\n}) => {\n  return (\n    <>\n      <Styled.Input\n        type={option.type}\n        value={option.value}\n        onChange={option.onChange}\n        onFocus={option.onFocus}\n        placeholder={option.placeholder}\n      />\n    </>\n  );\n};\n\nInput.prototype = {\n  option: propTypes.shape({\n    type: propTypes.string,\n    value: propTypes.any,\n    onChange: propTypes.func,\n    onFocus: propTypes.func,\n    placeholder: propTypes.string,\n  }),\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}