{"ast":null,"code":"//컴포넌트로 입력받은 padding과 margin으로 입력된 값을 설정한다.\nexport const CalculateBox = targetArr => {\n  let resultArr = [targetArr[0], targetArr[0], targetArr[0], targetArr[0]];\n\n  if (targetArr.length === 2) {\n    if (targetArr[1] !== undefined) resultArr = [targetArr[0], targetArr[1], targetArr[0], targetArr[1]];\n  } else if (targetArr.length === 3) {\n    if (targetArr[1] !== undefined && targetArr[2] !== undefined) resultArr = [targetArr[0], targetArr[1], targetArr[2], targetArr[1]];\n  } else if (targetArr.length === 4) {\n    if (targetArr[1] !== undefined && targetArr[2] !== undefined && targetArr[3] !== undefined) resultArr = [targetArr[0], targetArr[1], targetArr[2], targetArr[3]];\n  }\n\n  return `${resultArr.toString().replace(/,/gi, \"rem \")}rem`;\n};\nexport const CalculateFlexAttribute = targetArr => {\n  let resultArr = [targetArr[0]];\n\n  if (targetArr.length > 2) {\n    resultArr = [targetArr[0], targetArr[1], targetArr[2]];\n  }\n\n  return resultArr;\n};","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/utils/index.js"],"names":["CalculateBox","targetArr","resultArr","length","undefined","toString","replace","CalculateFlexAttribute"],"mappings":"AAAA;AACA,OAAO,MAAMA,YAAY,GAAIC,SAAD,IAAe;AACzC,MAAIC,SAAS,GAAG,CAACD,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,EAA6BA,SAAS,CAAC,CAAD,CAAtC,EAA2CA,SAAS,CAAC,CAAD,CAApD,CAAhB;;AAEA,MAAIA,SAAS,CAACE,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,QAAIF,SAAS,CAAC,CAAD,CAAT,KAAiBG,SAArB,EACEF,SAAS,GAAG,CAACD,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,EAA6BA,SAAS,CAAC,CAAD,CAAtC,EAA2CA,SAAS,CAAC,CAAD,CAApD,CAAZ;AACH,GAHD,MAGO,IAAIA,SAAS,CAACE,MAAV,KAAqB,CAAzB,EAA4B;AACjC,QAAIF,SAAS,CAAC,CAAD,CAAT,KAAiBG,SAAjB,IAA8BH,SAAS,CAAC,CAAD,CAAT,KAAiBG,SAAnD,EACEF,SAAS,GAAG,CAACD,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,EAA6BA,SAAS,CAAC,CAAD,CAAtC,EAA2CA,SAAS,CAAC,CAAD,CAApD,CAAZ;AACH,GAHM,MAGA,IAAIA,SAAS,CAACE,MAAV,KAAqB,CAAzB,EAA4B;AACjC,QACEF,SAAS,CAAC,CAAD,CAAT,KAAiBG,SAAjB,IACAH,SAAS,CAAC,CAAD,CAAT,KAAiBG,SADjB,IAEAH,SAAS,CAAC,CAAD,CAAT,KAAiBG,SAHnB,EAKEF,SAAS,GAAG,CAACD,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,EAA6BA,SAAS,CAAC,CAAD,CAAtC,EAA2CA,SAAS,CAAC,CAAD,CAApD,CAAZ;AACH;;AAED,SAAQ,GAAEC,SAAS,CAACG,QAAV,GAAqBC,OAArB,CAA6B,KAA7B,EAAoC,MAApC,CAA4C,KAAtD;AACD,CAnBM;AAqBP,OAAO,MAAMC,sBAAsB,GAAIN,SAAD,IAAe;AACnD,MAAIC,SAAS,GAAG,CAACD,SAAS,CAAC,CAAD,CAAV,CAAhB;;AACA,MAAIA,SAAS,CAACE,MAAV,GAAmB,CAAvB,EAA0B;AACxBD,IAAAA,SAAS,GAAG,CAACD,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,EAA6BA,SAAS,CAAC,CAAD,CAAtC,CAAZ;AACD;;AACD,SAAOC,SAAP;AACD,CANM","sourcesContent":["//컴포넌트로 입력받은 padding과 margin으로 입력된 값을 설정한다.\nexport const CalculateBox = (targetArr) => {\n  let resultArr = [targetArr[0], targetArr[0], targetArr[0], targetArr[0]];\n\n  if (targetArr.length === 2) {\n    if (targetArr[1] !== undefined)\n      resultArr = [targetArr[0], targetArr[1], targetArr[0], targetArr[1]];\n  } else if (targetArr.length === 3) {\n    if (targetArr[1] !== undefined && targetArr[2] !== undefined)\n      resultArr = [targetArr[0], targetArr[1], targetArr[2], targetArr[1]];\n  } else if (targetArr.length === 4) {\n    if (\n      targetArr[1] !== undefined &&\n      targetArr[2] !== undefined &&\n      targetArr[3] !== undefined\n    )\n      resultArr = [targetArr[0], targetArr[1], targetArr[2], targetArr[3]];\n  }\n\n  return `${resultArr.toString().replace(/,/gi, \"rem \")}rem`;\n};\n\nexport const CalculateFlexAttribute = (targetArr) => {\n  let resultArr = [targetArr[0]];\n  if (targetArr.length > 2) {\n    resultArr = [targetArr[0], targetArr[1], targetArr[2]];\n  }\n  return resultArr;\n};\n"]},"metadata":{},"sourceType":"module"}