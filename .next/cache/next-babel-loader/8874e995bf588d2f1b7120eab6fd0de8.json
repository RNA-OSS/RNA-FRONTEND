{"ast":null,"code":"var _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/molecules/Table/index.jsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from \"react\";\nimport propTypes from \"prop-types\";\nimport * as Styled from \"./style\";\nimport Tr from \"../Tr\";\nimport Th from \"../Th\";\nimport Td, { TextAlign } from \"../Td\";\nimport { LOAD_POST_REQUEST } from \"../../../reducers/post\";\nimport dispatch from \"react-redux\";\n\nconst Table = ({\n  headData,\n  bodyData,\n  hover = false,\n  onClickTd\n}) => {\n  const onClickPost = useCallback(postId => {\n    dispatch({\n      type: LOAD_POST_REQUEST,\n      postId: postId\n    });\n  }, []);\n\n  let renderTableHeadData = () => headData.map((data, i) => __jsx(Th, {\n    key: i,\n    pad: [2, 0],\n    width: data.width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, data.name));\n\n  let renderTableBodyData = () => bodyData.map(data => __jsx(Tr, {\n    key: data.id,\n    bordered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(Td, {\n    pad: [1, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, data.id), __jsx(Td, {\n    textAlign: TextAlign.LEFT,\n    onClick: () => onClickPost(data.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, data.title), __jsx(Td, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, data.user), __jsx(Td, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, data.date)));\n\n  return __jsx(Styled.Table, {\n    hover: hover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(Tr, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, renderTableHeadData())), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, renderTableBodyData()));\n};\n\nTable.prototype = {\n  headData: propTypes.array,\n  bodyData: propTypes.array,\n  hover: propTypes.bool\n};\nexport default Table;","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/molecules/Table/index.jsx"],"names":["React","useCallback","propTypes","Styled","Tr","Th","Td","TextAlign","LOAD_POST_REQUEST","dispatch","Table","headData","bodyData","hover","onClickTd","onClickPost","postId","type","renderTableHeadData","map","data","i","width","name","renderTableBodyData","id","LEFT","title","user","date","prototype","array","bool"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,SAAxB;AACA,OAAOC,EAAP,MAAe,OAAf;AACA,OAAOC,EAAP,MAAe,OAAf;AACA,OAAOC,EAAP,IAAaC,SAAb,QAA8B,OAA9B;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,KAAK,GAAG,KAA9B;AAAqCC,EAAAA;AAArC,CAAD,KAAsD;AAClE,QAAMC,WAAW,GAAGd,WAAW,CAAEe,MAAD,IAAY;AAC1CP,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAET,iBAAR;AAA2BQ,MAAAA,MAAM,EAAEA;AAAnC,KAAD,CAAR;AACD,GAF8B,EAE5B,EAF4B,CAA/B;;AAIA,MAAIE,mBAAmB,GAAG,MACxBP,QAAQ,CAACQ,GAAT,CAAa,CAACC,IAAD,EAAOC,CAAP,KACX,MAAC,EAAD;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAY,IAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAjB;AAAyB,IAAA,KAAK,EAAED,IAAI,CAACE,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACG,IADR,CADF,CADF;;AAOA,MAAIC,mBAAmB,GAAG,MACxBZ,QAAQ,CAACO,GAAT,CAAcC,IAAD,IACX,MAAC,EAAD;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACK,EAAd;AAAkB,IAAA,QAAQ,EAAE,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,EAAD;AAAI,IAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBL,IAAI,CAACK,EAAvB,CADF,EAEE,MAAC,EAAD;AAAI,IAAA,SAAS,EAAElB,SAAS,CAACmB,IAAzB;AAA+B,IAAA,OAAO,EAAE,MAAMX,WAAW,CAACK,IAAI,CAACK,EAAN,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACO,KADR,CAFF,EAKE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,IAAI,CAACQ,IAAV,CALF,EAME,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,IAAI,CAACS,IAAV,CANF,CADF,CADF;;AAYA,SACE,MAAC,MAAD,CAAQ,KAAR;AAAc,IAAA,KAAK,EAAEhB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKK,mBAAmB,EAAxB,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQM,mBAAmB,EAA3B,CAJF,CADF;AAQD,CAhCD;;AAkCAd,KAAK,CAACoB,SAAN,GAAkB;AAChBnB,EAAAA,QAAQ,EAAET,SAAS,CAAC6B,KADJ;AAEhBnB,EAAAA,QAAQ,EAAEV,SAAS,CAAC6B,KAFJ;AAGhBlB,EAAAA,KAAK,EAAEX,SAAS,CAAC8B;AAHD,CAAlB;AAMA,eAAetB,KAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport propTypes from \"prop-types\";\n\nimport * as Styled from \"./style\";\nimport Tr from \"../Tr\";\nimport Th from \"../Th\";\nimport Td, { TextAlign } from \"../Td\";\nimport { LOAD_POST_REQUEST } from \"../../../reducers/post\";\nimport dispatch from \"react-redux\";\n\nconst Table = ({ headData, bodyData, hover = false, onClickTd }) => {\n  const onClickPost = useCallback((postId) => {\n    dispatch({ type: LOAD_POST_REQUEST, postId: postId });\n  }, []);\n\n  let renderTableHeadData = () =>\n    headData.map((data, i) => (\n      <Th key={i} pad={[2, 0]} width={data.width}>\n        {data.name}\n      </Th>\n    ));\n\n  let renderTableBodyData = () =>\n    bodyData.map((data) => (\n      <Tr key={data.id} bordered={true}>\n        <Td pad={[1, 0]}>{data.id}</Td>\n        <Td textAlign={TextAlign.LEFT} onClick={() => onClickPost(data.id)}>\n          {data.title}\n        </Td>\n        <Td>{data.user}</Td>\n        <Td>{data.date}</Td>\n      </Tr>\n    ));\n\n  return (\n    <Styled.Table hover={hover}>\n      <thead>\n        <Tr>{renderTableHeadData()}</Tr>\n      </thead>\n      <tbody>{renderTableBodyData()}</tbody>\n    </Styled.Table>\n  );\n};\n\nTable.prototype = {\n  headData: propTypes.array,\n  bodyData: propTypes.array,\n  hover: propTypes.bool,\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}