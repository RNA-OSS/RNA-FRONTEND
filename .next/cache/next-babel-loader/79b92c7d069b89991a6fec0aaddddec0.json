{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/Board/index.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport propTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Router, { useRouter } from \"next/router\";\nimport * as Styled from \"./style\";\nimport Title, { TitleSize, TitleWeight } from \"../../atoms/Title\";\nimport Table from \"../../molecules/Table\";\nimport Box, { BoxSort } from \"../../molecules/Box\";\nimport Span from \"../../atoms/Span\";\nimport Button, { ButtonFontSize } from \"../../atoms/Button\";\nimport { LOAD_POST_LISTS_REQUEST } from \"../../../reducers/post\";\nvar HeadData = [{\n  name: \"번호\",\n  width: \"auto\"\n}, {\n  name: \"제목\",\n  width: \"50%\"\n}, {\n  name: \"작성자\",\n  width: \"auto\"\n}, {\n  name: \"날짜\",\n  width: \"auto\"\n}];\n\nvar Board = function Board() {\n  _s();\n\n  var _useState = useState(1),\n      currentIndex = _useState[0],\n      setCurrentIndex = _useState[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.postReducer;\n  }),\n      postLists = _useSelector.postLists,\n      isLoadedPostLists = _useSelector.isLoadedPostLists;\n\n  var posts = [];\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POST_LISTS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    var col = 0;\n    posts = Array(Math.ceil(postLists.length / 20)).fill(null).map(function () {\n      return Array();\n    });\n    postLists.map(function (post, i) {\n      if (i % 20 === 0 && i !== 0) {\n        col++;\n      }\n\n      posts[col].push(post);\n    });\n    console.log(posts[0]);\n  }, [postLists]);\n\n  var renderPageIndexButtons = function renderPageIndexButtons() {\n    return postLists.map(function (post, i) {\n      return i === 0 ? __jsx(Styled.CurrentPageButton, {\n        current: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, currentIndex) : __jsx(Styled.CurrentPageButton, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, currentIndex + i);\n    });\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    sort: BoxSort.CENTER_LEFT,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(Title, {\n    size: TitleSize.xs,\n    weight: TitleWeight.l,\n    mar: [2, 0, 2, 2],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"\\uAC8C\\uC2DC\\uD310\")), __jsx(Box, {\n    sort: BoxSort.TOP_RIGHT,\n    mar: [0, 0, 2, 0],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    width: \"100px\",\n    height: \"34px\",\n    fontSize: ButtonFontSize.S,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"\\uAE00\\uC4F0\\uAE30\")), isLoadedPostLists && __jsx(Styled.TableContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    headData: HeadData,\n    bodyData: posts[currentIndex],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    sort: BoxSort.CENTER_CENTER,\n    mar: [2, 0],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(Styled.PreviousButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), renderPageIndexButtons(), __jsx(Span, {\n    mar: [0, 1.5, 0, 0],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"...\"), __jsx(Styled.CurrentPageButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"23\"), __jsx(Styled.NextButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Board, \"4DcZ1CfnQ5JwiTPLOq778Ah4zNA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Board;\nBoard.propTypes = {};\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/Board/index.jsx"],"names":["React","useState","useEffect","propTypes","useDispatch","useSelector","Router","useRouter","Styled","Title","TitleSize","TitleWeight","Table","Box","BoxSort","Span","Button","ButtonFontSize","LOAD_POST_LISTS_REQUEST","HeadData","name","width","Board","currentIndex","setCurrentIndex","dispatch","state","postReducer","postLists","isLoadedPostLists","posts","type","col","Array","Math","ceil","length","fill","map","post","i","push","console","log","renderPageIndexButtons","CENTER_LEFT","xs","l","TOP_RIGHT","S","CENTER_CENTER"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport propTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Router, { useRouter } from \"next/router\";\n\nimport * as Styled from \"./style\";\nimport Title, { TitleSize, TitleWeight } from \"../../atoms/Title\";\nimport Table from \"../../molecules/Table\";\nimport Box, { BoxSort } from \"../../molecules/Box\";\nimport Span from \"../../atoms/Span\";\nimport Button, { ButtonFontSize } from \"../../atoms/Button\";\nimport { LOAD_POST_LISTS_REQUEST } from \"../../../reducers/post\";\n\nconst HeadData = [\n  { name: \"번호\", width: \"auto\" },\n  { name: \"제목\", width: \"50%\" },\n  { name: \"작성자\", width: \"auto\" },\n  { name: \"날짜\", width: \"auto\" },\n];\n\nconst Board = () => {\n  const [currentIndex, setCurrentIndex] = useState(1);\n  const dispatch = useDispatch();\n  const { postLists, isLoadedPostLists } = useSelector(\n    (state) => state.postReducer\n  );\n  let posts = [];\n\n  useEffect(() => {\n    dispatch({ type: LOAD_POST_LISTS_REQUEST });\n  }, []);\n\n  useEffect(() => {\n    let col = 0;\n    posts = Array(Math.ceil(postLists.length / 20))\n      .fill(null)\n      .map(() => Array());\n    postLists.map((post, i) => {\n      if (i % 20 === 0 && i !== 0) {\n        col++;\n      }\n      posts[col].push(post);\n    });\n    console.log(posts[0]);\n  }, [postLists]);\n\n  const renderPageIndexButtons = () => {\n    return postLists.map((post, i) =>\n      i === 0 ? (\n        <Styled.CurrentPageButton current>\n          {currentIndex}\n        </Styled.CurrentPageButton>\n      ) : (\n        <Styled.CurrentPageButton>{currentIndex + i}</Styled.CurrentPageButton>\n      )\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <Box sort={BoxSort.CENTER_LEFT}>\n        <Title size={TitleSize.xs} weight={TitleWeight.l} mar={[2, 0, 2, 2]}>\n          게시판\n        </Title>\n      </Box>\n      <Box sort={BoxSort.TOP_RIGHT} mar={[0, 0, 2, 0]}>\n        <Button width=\"100px\" height=\"34px\" fontSize={ButtonFontSize.S}>\n          글쓰기\n        </Button>\n      </Box>\n\n      {isLoadedPostLists && (\n        <Styled.TableContainer>\n          <Table headData={HeadData} bodyData={posts[currentIndex]} />\n        </Styled.TableContainer>\n      )}\n      <Box sort={BoxSort.CENTER_CENTER} mar={[2, 0]}>\n        <Styled.PreviousButton />\n        {renderPageIndexButtons()}\n        <Span mar={[0, 1.5, 0, 0]}>...</Span>\n        <Styled.CurrentPageButton>23</Styled.CurrentPageButton>\n        <Styled.NextButton />\n      </Box>\n    </React.Fragment>\n  );\n};\n\nBoard.propTypes = {};\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}