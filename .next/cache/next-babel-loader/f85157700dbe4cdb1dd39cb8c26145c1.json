{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/Board/index.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport propTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Router, { useRouter } from \"next/router\";\nimport * as Styled from \"./style\";\nimport Title, { TitleSize, TitleWeight } from \"../../atoms/Title\";\nimport Table from \"../../molecules/Table\";\nimport Box, { BoxSort } from \"../../molecules/Box\";\nimport Span from \"../../atoms/Span\";\nimport Button, { ButtonFontSize } from \"../../atoms/Button\";\nimport { LOAD_POST_LISTS_REQUEST } from \"../../../reducers/post\";\nvar HeadData = [{\n  name: \"번호\",\n  width: \"auto\"\n}, {\n  name: \"제목\",\n  width: \"50%\"\n}, {\n  name: \"작성자\",\n  width: \"auto\"\n}, {\n  name: \"날짜\",\n  width: \"auto\"\n}];\n\nvar Board = function Board() {\n  _s();\n\n  var _useState = useState(1),\n      currentIndex = _useState[0],\n      setCurrentIndex = _useState[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.postReducer;\n  }),\n      postLists = _useSelector.postLists,\n      isLoadedPostLists = _useSelector.isLoadedPostLists;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POST_LISTS_REQUEST\n    });\n  }, []);\n  var onClickMoveIndex = useCallback(function (index) {\n    setCurrentIndex(index);\n  }, [currentIndex]);\n\n  var renderPageIndexButtons = function renderPageIndexButtons() {\n    return __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, currentIndex - 4 >= 1 && __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, __jsx(Styled.CurrentPageButton, {\n      onClick: function onClick() {\n        return onClickMoveIndex(1);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"1\"), __jsx(Span, {\n      mar: [0, 1.5, 0, 0],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \"...\")), __jsx(Styled.CurrentPageButton, {\n      current: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, currentIndex), currentIndex + 4 <= postLists.length && __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, __jsx(Styled.CurrentPageButton, {\n      onClick: function onClick() {\n        return onClickMoveIndex(1);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"1\"), __jsx(Span, {\n      mar: [0, 1.5, 0, 0],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"...\"))); // return postLists.map((post, i) => (\n    //   <React.Fragment key={i}>\n    //     {i === currentIndex - 1 ? (\n    //       <Styled.CurrentPageButton current>\n    //         {currentIndex}\n    //       </Styled.CurrentPageButton>\n    //     ) : (\n    //       <Styled.CurrentPageButton\n    //         onClick={onClickPageIndexButton(currentIndex + i)}\n    //       >\n    //         {currentIndex + i}\n    //       </Styled.CurrentPageButton>\n    //     )}\n    //   </React.Fragment>\n    // ));\n    // {\n    //   currentIndex + 4 < postLists.length && (\n    //     <React.Fragment>\n    //       <Span mar={[0, 1.5, 0, 0]}>...</Span>\n    //       <Styled.CurrentPageButton>\n    //         {postLists.length}\n    //       </Styled.CurrentPageButton>\n    //     </React.Fragment>\n    //   );\n    // }\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    sort: BoxSort.CENTER_LEFT,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, __jsx(Title, {\n    size: TitleSize.xs,\n    weight: TitleWeight.l,\n    mar: [2, 0, 2, 2],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"\\uAC8C\\uC2DC\\uD310\")), __jsx(Box, {\n    sort: BoxSort.TOP_RIGHT,\n    mar: [0, 0, 2, 0],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    width: \"100px\",\n    height: \"34px\",\n    fontSize: ButtonFontSize.S,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"\\uAE00\\uC4F0\\uAE30\")), isLoadedPostLists && __jsx(Styled.TableContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    headData: HeadData,\n    bodyData: postLists[currentIndex - 1],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    sort: BoxSort.CENTER_CENTER,\n    mar: [2, 0],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, currentIndex !== 1 && __jsx(Styled.PreviousButton, {\n    onClick: function onClick() {\n      return onClickMoveIndex(currentIndex - 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }), renderPageIndexButtons(), currentIndex !== postLists.length && __jsx(Styled.NextButton, {\n    onClick: function onClick() {\n      return onClickMoveIndex(currentIndex + 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(Board, \"riTi141pltQuMv7aiTDyfxHg+ME=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Board;\nBoard.propTypes = {};\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/Board/index.jsx"],"names":["React","useState","useEffect","useCallback","propTypes","useDispatch","useSelector","Router","useRouter","Styled","Title","TitleSize","TitleWeight","Table","Box","BoxSort","Span","Button","ButtonFontSize","LOAD_POST_LISTS_REQUEST","HeadData","name","width","Board","currentIndex","setCurrentIndex","dispatch","state","postReducer","postLists","isLoadedPostLists","type","onClickMoveIndex","index","renderPageIndexButtons","length","CENTER_LEFT","xs","l","TOP_RIGHT","S","CENTER_CENTER"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport propTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Router, { useRouter } from \"next/router\";\n\nimport * as Styled from \"./style\";\nimport Title, { TitleSize, TitleWeight } from \"../../atoms/Title\";\nimport Table from \"../../molecules/Table\";\nimport Box, { BoxSort } from \"../../molecules/Box\";\nimport Span from \"../../atoms/Span\";\nimport Button, { ButtonFontSize } from \"../../atoms/Button\";\nimport { LOAD_POST_LISTS_REQUEST } from \"../../../reducers/post\";\n\nconst HeadData = [\n  { name: \"번호\", width: \"auto\" },\n  { name: \"제목\", width: \"50%\" },\n  { name: \"작성자\", width: \"auto\" },\n  { name: \"날짜\", width: \"auto\" },\n];\n\nconst Board = () => {\n  const [currentIndex, setCurrentIndex] = useState(1);\n  const dispatch = useDispatch();\n  const { postLists, isLoadedPostLists } = useSelector(\n    (state) => state.postReducer\n  );\n\n  useEffect(() => {\n    dispatch({ type: LOAD_POST_LISTS_REQUEST });\n  }, []);\n\n  const onClickMoveIndex = useCallback(\n    (index) => {\n      setCurrentIndex(index);\n    },\n    [currentIndex]\n  );\n\n  const renderPageIndexButtons = () => {\n    return (\n      <React.Fragment>\n        {currentIndex - 4 >= 1 && (\n          <React.Fragment>\n            <Styled.CurrentPageButton onClick={() => onClickMoveIndex(1)}>\n              1\n            </Styled.CurrentPageButton>\n            <Span mar={[0, 1.5, 0, 0]}>...</Span>\n          </React.Fragment>\n        )}\n        <Styled.CurrentPageButton current>\n          {currentIndex}\n        </Styled.CurrentPageButton>\n        {currentIndex + 4 <= postLists.length && (\n          <React.Fragment>\n            <Styled.CurrentPageButton onClick={() => onClickMoveIndex(1)}>\n              1\n            </Styled.CurrentPageButton>\n            <Span mar={[0, 1.5, 0, 0]}>...</Span>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n\n    // return postLists.map((post, i) => (\n    //   <React.Fragment key={i}>\n    //     {i === currentIndex - 1 ? (\n    //       <Styled.CurrentPageButton current>\n    //         {currentIndex}\n    //       </Styled.CurrentPageButton>\n    //     ) : (\n    //       <Styled.CurrentPageButton\n    //         onClick={onClickPageIndexButton(currentIndex + i)}\n    //       >\n    //         {currentIndex + i}\n    //       </Styled.CurrentPageButton>\n    //     )}\n    //   </React.Fragment>\n    // ));\n    // {\n    //   currentIndex + 4 < postLists.length && (\n    //     <React.Fragment>\n    //       <Span mar={[0, 1.5, 0, 0]}>...</Span>\n    //       <Styled.CurrentPageButton>\n    //         {postLists.length}\n    //       </Styled.CurrentPageButton>\n    //     </React.Fragment>\n    //   );\n    // }\n  };\n\n  return (\n    <React.Fragment>\n      <Box sort={BoxSort.CENTER_LEFT}>\n        <Title size={TitleSize.xs} weight={TitleWeight.l} mar={[2, 0, 2, 2]}>\n          게시판\n        </Title>\n      </Box>\n      <Box sort={BoxSort.TOP_RIGHT} mar={[0, 0, 2, 0]}>\n        <Button width=\"100px\" height=\"34px\" fontSize={ButtonFontSize.S}>\n          글쓰기\n        </Button>\n      </Box>\n      {isLoadedPostLists && (\n        <Styled.TableContainer>\n          <Table headData={HeadData} bodyData={postLists[currentIndex - 1]} />\n        </Styled.TableContainer>\n      )}\n\n      <Box sort={BoxSort.CENTER_CENTER} mar={[2, 0]}>\n        {currentIndex !== 1 && (\n          <Styled.PreviousButton\n            onClick={() => onClickMoveIndex(currentIndex - 1)}\n          />\n        )}\n        {renderPageIndexButtons()}\n        {currentIndex !== postLists.length && (\n          <Styled.NextButton\n            onClick={() => onClickMoveIndex(currentIndex + 1)}\n          />\n        )}\n      </Box>\n    </React.Fragment>\n  );\n};\n\nBoard.propTypes = {};\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}