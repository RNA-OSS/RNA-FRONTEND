{"ast":null,"code":"var _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/LoginForm/SignUpForm.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport * as Styled from \"./style\";\nimport Input from \"../../atoms/Input/Input\";\nimport Button from \"../../atoms/Button/Button\";\nimport useInput from \"../../../hooks/useInput\";\n\nconst SignUpForm = () => {\n  const [email, onChangeEmail] = useInput(\"\");\n  const [name, onChangeName] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n  const [passwordCheck, onChangePasswordCheck] = useInput(\"\");\n  const {\n    0: emailFocus,\n    1: setEmailFocus\n  } = useState(false);\n  const {\n    0: nameFocus,\n    1: setNameFocus\n  } = useState(false);\n  const {\n    0: passwordFocus,\n    1: setPasswordFocus\n  } = useState(false);\n  const {\n    0: passwordCheckFocus,\n    1: setPasswordCheckFocus\n  } = useState(false);\n  const {\n    0: emailCheck,\n    1: setEmailCheck\n  } = useState(false);\n  const {\n    0: nameInputCheck,\n    1: setNameInputCheck\n  } = useState(false);\n  const {\n    0: passwordEqualCheck,\n    1: setPasswordEqualCheck\n  } = useState(false);\n  const {\n    0: passwordLengthCheck,\n    1: setPasswordLengthCheck\n  } = useState(false);\n  const {\n    0: passwordSpecialCharacterCheck,\n    1: setPasswordSpecialCharacterCheck\n  } = useState(false);\n  const {\n    0: passwordShow,\n    1: setPasswordShow\n  } = useState(false);\n  const {\n    0: passwordCheckShow,\n    1: setPasswordCheckShow\n  } = useState(false);\n  const onEmailFocus = useCallback(() => {\n    console.log(\"aa\");\n    setEmailFocus(true);\n  }, []);\n  const onNameFocus = useCallback(() => {\n    setNameFocus(true);\n  }, []);\n  const onPasswordFocus = useCallback(() => {\n    setPasswordFocus(true);\n  }, []);\n  const onPasswordCheckFocus = useCallback(() => {\n    setPasswordCheckFocus(true);\n  }, []);\n  const onClickPasswordShowBtn = useCallback(e => {\n    e.preventDefault();\n    setPasswordShow(!passwordShow);\n  }, [passwordShow]);\n  const onClickPasswordCheckShowBtn = useCallback(e => {\n    e.preventDefault();\n    setPasswordCheckShow(!passwordCheckShow);\n  }, [passwordCheckShow]);\n  useEffect(() => {\n    if (email.includes(\"@\") && email.includes(\".\")) {\n      setEmailCheck(true);\n    } else {\n      setEmailCheck(false);\n    }\n  }, [email]);\n  useEffect(() => {\n    const koreanCheck = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\n    const englishCheck = /^[a-zA-Z]*$/;\n\n    if ((koreanCheck.test(name) || englishCheck.test(name)) && name.length > 0) {\n      setNameInputCheck(true);\n    } else {\n      setNameInputCheck(false);\n    }\n  }, [name]); //옳바른 비밀번호인지 확인한다. 비밀번호를 입력할때마 함수 실행\n\n  useEffect(() => {\n    if (password.length >= 8) {\n      setPasswordLengthCheck(true);\n    } else {\n      setPasswordLengthCheck(false);\n    }\n\n    if (password.includes(\"?\") | password.includes(\"@\") | password.includes(\"!\")) {\n      setPasswordSpecialCharacterCheck(true);\n    } else {\n      setPasswordSpecialCharacterCheck(false);\n    }\n  }, [password]); //비밀번호와 비밀번호 확인이 같은지 확인한다. 비밀번호 확인 입력시 함수 실행\n\n  useEffect(() => {\n    if (password == passwordCheck && password.length > 0) {\n      setPasswordEqualCheck(true);\n    } else {\n      setPasswordEqualCheck(false);\n    }\n  }, [passwordCheck]);\n  return __jsx(Styled.SignForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, console.log(emailFocus), __jsx(Styled.InputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"input-email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBA54\\uC77C\"), __jsx(Input, {\n    id: \"input-email\",\n    type: \"text\",\n    value: email,\n    onChange: onChangeEmail,\n    placeholder: \"rna123@email.com\",\n    onFocus: onEmailFocus,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), __jsx(Styled.CheckContainer, {\n    visible: emailFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, __jsx(Styled.CheckText, {\n    checked: emailCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"\\uC774\\uBA54\\uC77C \\uD615\\uC2DD\"))), __jsx(Styled.InputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"input-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uB984\"), __jsx(Input, {\n    id: \"input-name\",\n    type: \"text\",\n    value: name,\n    onChange: onChangeName,\n    placeholder: \"\\uD64D\\uAE38\\uB3D9\",\n    onFocus: onNameFocus,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }), __jsx(Styled.CheckContainer, {\n    visible: nameFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, __jsx(Styled.CheckText, {\n    checked: nameInputCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, \"\\uC62C\\uBC14\\uB978 \\uC774\\uB984 \\uC785\\uB825\"))), __jsx(Styled.InputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"input-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(Input, {\n    id: \"input-password\",\n    type: passwordShow ? \"text\" : \"password\",\n    value: password,\n    onChange: onChangePassword,\n    onFocus: onPasswordFocus,\n    placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC785\\uB825\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }), __jsx(Styled.PasswordShowButton, {\n    onClick: onClickPasswordShowBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, passwordShow ? __jsx(Styled.EyeSlashIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 27\n    }\n  }) : __jsx(Styled.EyeIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 53\n    }\n  }))), __jsx(Styled.CheckContainer, {\n    visible: passwordFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, __jsx(Styled.CheckText, {\n    checked: passwordLengthCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, \"8\\uC790 \\uC774\\uC0C1\"), __jsx(Styled.CheckText, {\n    checked: passwordSpecialCharacterCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, \"\\uD2B9\\uC218\\uBB38\\uC790 1\\uC790 \\uC774\\uC0C1(!, ?, @)\")), __jsx(Styled.InputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"input-passwordCheck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"), __jsx(Input, {\n    id: \"input-passwordCheck\",\n    type: passwordCheckShow ? \"text\" : \"password\",\n    value: passwordCheck,\n    onChange: onChangePasswordCheck,\n    onFocus: onPasswordCheckFocus,\n    placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }), __jsx(Styled.PasswordShowButton, {\n    onClick: onClickPasswordCheckShowBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, passwordCheckShow ? __jsx(Styled.EyeSlashIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 32\n    }\n  }) : __jsx(Styled.EyeIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 58\n    }\n  }))), __jsx(Styled.CheckContainer, {\n    visible: passwordCheckFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, __jsx(Styled.CheckText, {\n    checked: passwordEqualCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC77C\\uCE58\")), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"));\n};\n\nexport default SignUpForm;","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/LoginForm/SignUpForm.jsx"],"names":["React","useState","useCallback","useEffect","Styled","Input","Button","useInput","SignUpForm","email","onChangeEmail","name","onChangeName","password","onChangePassword","passwordCheck","onChangePasswordCheck","emailFocus","setEmailFocus","nameFocus","setNameFocus","passwordFocus","setPasswordFocus","passwordCheckFocus","setPasswordCheckFocus","emailCheck","setEmailCheck","nameInputCheck","setNameInputCheck","passwordEqualCheck","setPasswordEqualCheck","passwordLengthCheck","setPasswordLengthCheck","passwordSpecialCharacterCheck","setPasswordSpecialCharacterCheck","passwordShow","setPasswordShow","passwordCheckShow","setPasswordCheckShow","onEmailFocus","console","log","onNameFocus","onPasswordFocus","onPasswordCheckFocus","onClickPasswordShowBtn","e","preventDefault","onClickPasswordCheckShowBtn","includes","koreanCheck","englishCheck","test","length"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\n\nimport * as Styled from \"./style\";\nimport Input from \"../../atoms/Input/Input\";\nimport Button from \"../../atoms/Button/Button\";\n\nimport useInput from \"../../../hooks/useInput\";\n\nconst SignUpForm = () => {\n  const [email, onChangeEmail] = useInput(\"\");\n  const [name, onChangeName] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n  const [passwordCheck, onChangePasswordCheck] = useInput(\"\");\n\n  const [emailFocus, setEmailFocus] = useState(false);\n  const [nameFocus, setNameFocus] = useState(false);\n  const [passwordFocus, setPasswordFocus] = useState(false);\n  const [passwordCheckFocus, setPasswordCheckFocus] = useState(false);\n\n  const [emailCheck, setEmailCheck] = useState(false);\n  const [nameInputCheck, setNameInputCheck] = useState(false);\n  const [passwordEqualCheck, setPasswordEqualCheck] = useState(false);\n  const [passwordLengthCheck, setPasswordLengthCheck] = useState(false);\n  const [\n    passwordSpecialCharacterCheck,\n    setPasswordSpecialCharacterCheck,\n  ] = useState(false);\n  const [passwordShow, setPasswordShow] = useState(false);\n  const [passwordCheckShow, setPasswordCheckShow] = useState(false);\n\n  const onEmailFocus = useCallback(() => {\n    console.log(\"aa\");\n    setEmailFocus(true);\n  }, []);\n  const onNameFocus = useCallback(() => {\n    setNameFocus(true);\n  }, []);\n  const onPasswordFocus = useCallback(() => {\n    setPasswordFocus(true);\n  }, []);\n  const onPasswordCheckFocus = useCallback(() => {\n    setPasswordCheckFocus(true);\n  }, []);\n\n  const onClickPasswordShowBtn = useCallback(\n    (e) => {\n      e.preventDefault();\n      setPasswordShow(!passwordShow);\n    },\n    [passwordShow]\n  );\n\n  const onClickPasswordCheckShowBtn = useCallback(\n    (e) => {\n      e.preventDefault();\n      setPasswordCheckShow(!passwordCheckShow);\n    },\n    [passwordCheckShow]\n  );\n\n  useEffect(() => {\n    if (email.includes(\"@\") && email.includes(\".\")) {\n      setEmailCheck(true);\n    } else {\n      setEmailCheck(false);\n    }\n  }, [email]);\n\n  useEffect(() => {\n    const koreanCheck = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\n    const englishCheck = /^[a-zA-Z]*$/;\n    if (\n      (koreanCheck.test(name) || englishCheck.test(name)) &&\n      name.length > 0\n    ) {\n      setNameInputCheck(true);\n    } else {\n      setNameInputCheck(false);\n    }\n  }, [name]);\n\n  //옳바른 비밀번호인지 확인한다. 비밀번호를 입력할때마 함수 실행\n  useEffect(() => {\n    if (password.length >= 8) {\n      setPasswordLengthCheck(true);\n    } else {\n      setPasswordLengthCheck(false);\n    }\n\n    if (\n      password.includes(\"?\") |\n      password.includes(\"@\") |\n      password.includes(\"!\")\n    ) {\n      setPasswordSpecialCharacterCheck(true);\n    } else {\n      setPasswordSpecialCharacterCheck(false);\n    }\n  }, [password]);\n\n  //비밀번호와 비밀번호 확인이 같은지 확인한다. 비밀번호 확인 입력시 함수 실행\n  useEffect(() => {\n    if (password == passwordCheck && password.length > 0) {\n      setPasswordEqualCheck(true);\n    } else {\n      setPasswordEqualCheck(false);\n    }\n  }, [passwordCheck]);\n\n  return (\n    <Styled.SignForm>\n      {console.log(emailFocus)}\n      {/* 이메일 */}\n      <Styled.InputContainer>\n        <label htmlFor=\"input-email\">이메일</label>\n        <Input\n          id=\"input-email\"\n          type=\"text\"\n          value={email}\n          onChange={onChangeEmail}\n          placeholder=\"rna123@email.com\"\n          onFocus={onEmailFocus}\n          required\n        ></Input>\n        <Styled.CheckContainer visible={emailFocus}>\n          <Styled.CheckText checked={emailCheck}>이메일 형식</Styled.CheckText>\n        </Styled.CheckContainer>\n      </Styled.InputContainer>\n      {/* 이름 */}\n      <Styled.InputContainer>\n        <label htmlFor=\"input-name\">이름</label>\n        <Input\n          id=\"input-name\"\n          type=\"text\"\n          value={name}\n          onChange={onChangeName}\n          placeholder=\"홍길동\"\n          onFocus={onNameFocus}\n          required\n        ></Input>\n        <Styled.CheckContainer visible={nameFocus}>\n          <Styled.CheckText checked={nameInputCheck}>\n            올바른 이름 입력\n          </Styled.CheckText>\n        </Styled.CheckContainer>\n      </Styled.InputContainer>\n      {/* 비밀번호 */}\n      <Styled.InputContainer>\n        <label htmlFor=\"input-password\">비밀번호</label>\n        <Input\n          id=\"input-password\"\n          type={passwordShow ? \"text\" : \"password\"}\n          value={password}\n          onChange={onChangePassword}\n          onFocus={onPasswordFocus}\n          placeholder=\"비밀번호 입력\"\n          required\n        ></Input>\n        <Styled.PasswordShowButton onClick={onClickPasswordShowBtn}>\n          {passwordShow ? <Styled.EyeSlashIcon /> : <Styled.EyeIcon />}\n        </Styled.PasswordShowButton>\n      </Styled.InputContainer>\n      <Styled.CheckContainer visible={passwordFocus}>\n        <Styled.CheckText checked={passwordLengthCheck}>\n          8자 이상\n        </Styled.CheckText>\n        <Styled.CheckText checked={passwordSpecialCharacterCheck}>\n          특수문자 1자 이상(!, ?, @)\n        </Styled.CheckText>\n      </Styled.CheckContainer>\n      {/* 비밀번호 획인 */}\n      <Styled.InputContainer>\n        <label htmlFor=\"input-passwordCheck\">비밀번호 확인</label>\n        <Input\n          id=\"input-passwordCheck\"\n          type={passwordCheckShow ? \"text\" : \"password\"}\n          value={passwordCheck}\n          onChange={onChangePasswordCheck}\n          onFocus={onPasswordCheckFocus}\n          placeholder=\"비밀번호 확인\"\n          required\n        ></Input>\n        <Styled.PasswordShowButton onClick={onClickPasswordCheckShowBtn}>\n          {passwordCheckShow ? <Styled.EyeSlashIcon /> : <Styled.EyeIcon />}\n        </Styled.PasswordShowButton>\n      </Styled.InputContainer>\n      <Styled.CheckContainer visible={passwordCheckFocus}>\n        <Styled.CheckText checked={passwordEqualCheck}>\n          비밀번호 일치\n        </Styled.CheckText>\n      </Styled.CheckContainer>\n      <Button>회원가입</Button>\n    </Styled.SignForm>\n  );\n};\n\nexport default SignUpForm;\n"]},"metadata":{},"sourceType":"module"}