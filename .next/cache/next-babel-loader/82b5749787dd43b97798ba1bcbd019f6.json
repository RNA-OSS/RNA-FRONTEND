{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"../reducers\";\n\nconst configureStore = ({\n  initialState,\n  options\n}) => {\n  const middlewares = [];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(rootReducer, initialState, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","rootReducer","configureStore","initialState","options","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,aAAxB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAA+B;AACpD,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,QAAQ,GACZ,QACIP,OAAO,CAACF,eAAe,CAAC,GAAGQ,WAAJ,CAAhB,CADX,GAEIL,mBAAmB,CAACH,eAAe,CAAC,GAAGQ,WAAJ,CAAhB,CAHzB;AAKA,QAAME,KAAK,GAAGT,WAAW,CAACG,WAAD,EAAcE,YAAd,EAA4BG,QAA5B,CAAzB;AACA,SAAOC,KAAP;AACD,CATD;;AAWA,MAAMC,OAAO,GAAGZ,aAAa,CAACM,cAAD,EAAiB;AAC5CO,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"../reducers\";\n\nconst configureStore = ({ initialState, options }) => {\n  const middlewares = [];\n  const enhancer =\n    process.env.NODE_ENV === \"production\"\n      ? compose(applyMiddleware(...middlewares))\n      : composeWithDevTools(applyMiddleware(...middlewares));\n\n  const store = createStore(rootReducer, initialState, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}