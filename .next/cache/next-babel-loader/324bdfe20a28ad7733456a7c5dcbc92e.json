{"ast":null,"code":"var _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/molecules/Table/index.jsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport * as Styled from \"./style\";\nimport Tr from \"../Tr\";\nimport Th from \"../Th\";\nimport Td from \"../Td\";\n\nconst Table = ({\n  headData,\n  bodyData\n}) => {\n  let renderTableHeadData = () => headData.map((data, i) => __jsx(Tr, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, __jsx(Th, {\n    pad: [2, 0],\n    width: data.width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, data.name)));\n\n  let renderTableBodyData = () => bodyData.map(data => __jsx(Tr, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(Td, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, data.id), __jsx(Td, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, data.title), __jsx(Td, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, data.user), __jsx(Td, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, data.date)));\n\n  return __jsx(Styled.Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, renderTableHeadData()), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, renderTableBodyData()));\n};\n\nexport default Table;","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/molecules/Table/index.jsx"],"names":["React","Styled","Tr","Th","Td","Table","headData","bodyData","renderTableHeadData","map","data","i","width","name","renderTableBodyData","id","title","user","date"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,SAAxB;AACA,OAAOC,EAAP,MAAe,OAAf;AACA,OAAOC,EAAP,MAAe,OAAf;AACA,OAAOC,EAAP,MAAe,OAAf;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AACxC,MAAIC,mBAAmB,GAAG,MACxBF,QAAQ,CAACG,GAAT,CAAa,CAACC,IAAD,EAAOC,CAAP,KACX,MAAC,EAAD;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,EAAD;AAAI,IAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAT;AAAiB,IAAA,KAAK,EAAED,IAAI,CAACE,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACG,IADR,CADF,CADF,CADF;;AASA,MAAIC,mBAAmB,GAAG,MACxBP,QAAQ,CAACE,GAAT,CAAcC,IAAD,IACX,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACK,EAAV,CADF,EAEE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,IAAI,CAACM,KAAV,CAFF,EAGE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,IAAI,CAACO,IAAV,CAHF,EAIE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,IAAI,CAACQ,IAAV,CAJF,CADF,CADF;;AAUA,SACE,MAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQV,mBAAmB,EAA3B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQM,mBAAmB,EAA3B,CAFF,CADF;AAMD,CA1BD;;AA4BA,eAAeT,KAAf","sourcesContent":["import React from \"react\";\n\nimport * as Styled from \"./style\";\nimport Tr from \"../Tr\";\nimport Th from \"../Th\";\nimport Td from \"../Td\";\n\nconst Table = ({ headData, bodyData }) => {\n  let renderTableHeadData = () =>\n    headData.map((data, i) => (\n      <Tr key={i}>\n        <Th pad={[2, 0]} width={data.width}>\n          {data.name}\n        </Th>\n      </Tr>\n    ));\n\n  let renderTableBodyData = () =>\n    bodyData.map((data) => (\n      <Tr>\n        <Td>{data.id}</Td>\n        <Td>{data.title}</Td>\n        <Td>{data.user}</Td>\n        <Td>{data.date}</Td>\n      </Tr>\n    ));\n\n  return (\n    <Styled.Table>\n      <thead>{renderTableHeadData()}</thead>\n      <tbody>{renderTableBodyData()}</tbody>\n    </Styled.Table>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}