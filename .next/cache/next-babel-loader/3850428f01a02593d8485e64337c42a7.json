{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/molecules/List/index.jsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport * as Styled from \"./style\";\nexport var ListJustifyOrder = {\n  start: \"flex-start\",\n  end: \"flex-end\",\n  center: \"center\",\n  between: \"space-between\"\n};\nexport var ListAlignOrder = {\n  start: \"flex-start\",\n  end: \"flex-end\",\n  center: \"center\",\n  between: \"space-between\"\n};\nexport var ListDirection = {\n  row: \"row\",\n  col: \"column\"\n};\n\nvar List = function List(_ref) {\n  var children = _ref.children,\n      _ref$card = _ref.card,\n      card = _ref$card === void 0 ? false : _ref$card,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? \"auto\" : _ref$width,\n      _ref$justify = _ref.justify,\n      justify = _ref$justify === void 0 ? ListJustifyOrder.start : _ref$justify,\n      _ref$align = _ref.align,\n      align = _ref$align === void 0 ? ListAlignOrder.start : _ref$align,\n      _ref$direction = _ref.direction,\n      direction = _ref$direction === void 0 ? ListDirection.row : _ref$direction;\n  return __jsx(Styled.List, {\n    card: card,\n    width: width,\n    justify: justify,\n    align: align,\n    direction: direction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_c = List;\nList.propTypes = {\n  children: propTypes.node.isRequired,\n  card: propTypes.bool,\n  width: propTypes.string,\n  justify: propTypes.string,\n  align: propTypes.string,\n  direction: propTypes.string\n};\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/molecules/List/index.jsx"],"names":["React","propTypes","Styled","ListJustifyOrder","start","end","center","between","ListAlignOrder","ListDirection","row","col","List","children","card","width","justify","align","direction","node","isRequired","bool","string"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,SAAxB;AAEA,OAAO,IAAMC,gBAAgB,GAAG;AAC9BC,EAAAA,KAAK,EAAE,YADuB;AAE9BC,EAAAA,GAAG,EAAE,UAFyB;AAG9BC,EAAAA,MAAM,EAAE,QAHsB;AAI9BC,EAAAA,OAAO,EAAE;AAJqB,CAAzB;AAOP,OAAO,IAAMC,cAAc,GAAG;AAC5BJ,EAAAA,KAAK,EAAE,YADqB;AAE5BC,EAAAA,GAAG,EAAE,UAFuB;AAG5BC,EAAAA,MAAM,EAAE,QAHoB;AAI5BC,EAAAA,OAAO,EAAE;AAJmB,CAAvB;AAOP,OAAO,IAAME,aAAa,GAAG;AAC3BC,EAAAA,GAAG,EAAE,KADsB;AAE3BC,EAAAA,GAAG,EAAE;AAFsB,CAAtB;;AAKP,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAOP;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,uBALJC,IAKI;AAAA,MALJA,IAKI,0BALG,KAKH;AAAA,wBAJJC,KAII;AAAA,MAJJA,KAII,2BAJI,MAIJ;AAAA,0BAHJC,OAGI;AAAA,MAHJA,OAGI,6BAHMb,gBAAgB,CAACC,KAGvB;AAAA,wBAFJa,KAEI;AAAA,MAFJA,KAEI,2BAFIT,cAAc,CAACJ,KAEnB;AAAA,4BADJc,SACI;AAAA,MADJA,SACI,+BADQT,aAAa,CAACC,GACtB;AACJ,SACE,MAAC,MAAD,CAAQ,IAAR;AACE,IAAA,IAAI,EAAEI,IADR;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,KAAK,EAAEC,KAJT;AAKE,IAAA,SAAS,EAAEC,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGL,QAPH,CADF;AAWD,CAnBD;;KAAMD,I;AAqBNA,IAAI,CAACX,SAAL,GAAiB;AACfY,EAAAA,QAAQ,EAAEZ,SAAS,CAACkB,IAAV,CAAeC,UADV;AAEfN,EAAAA,IAAI,EAAEb,SAAS,CAACoB,IAFD;AAGfN,EAAAA,KAAK,EAAEd,SAAS,CAACqB,MAHF;AAIfN,EAAAA,OAAO,EAAEf,SAAS,CAACqB,MAJJ;AAKfL,EAAAA,KAAK,EAAEhB,SAAS,CAACqB,MALF;AAMfJ,EAAAA,SAAS,EAAEjB,SAAS,CAACqB;AANN,CAAjB;AASA,eAAeV,IAAf","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\n\nimport * as Styled from \"./style\";\n\nexport const ListJustifyOrder = {\n  start: \"flex-start\",\n  end: \"flex-end\",\n  center: \"center\",\n  between: \"space-between\",\n};\n\nexport const ListAlignOrder = {\n  start: \"flex-start\",\n  end: \"flex-end\",\n  center: \"center\",\n  between: \"space-between\",\n};\n\nexport const ListDirection = {\n  row: \"row\",\n  col: \"column\",\n};\n\nconst List = ({\n  children,\n  card = false,\n  width = \"auto\",\n  justify = ListJustifyOrder.start,\n  align = ListAlignOrder.start,\n  direction = ListDirection.row,\n}) => {\n  return (\n    <Styled.List\n      card={card}\n      width={width}\n      justify={justify}\n      align={align}\n      direction={direction}\n    >\n      {children}\n    </Styled.List>\n  );\n};\n\nList.propTypes = {\n  children: propTypes.node.isRequired,\n  card: propTypes.bool,\n  width: propTypes.string,\n  justify: propTypes.string,\n  align: propTypes.string,\n  direction: propTypes.string,\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}