{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { produce } from \"immer\";\nconst initialState = {\n  isSignIn: true\n};\nexport const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_UP = \"SIGN_UP\";\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isSignIn: true\n        });\n      }\n\n    case SIGN_UP:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isSignIn: false\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/reducers/sign.js"],"names":["produce","initialState","isSignIn","SIGN_IN","SIGN_UP","state","action","type"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,OAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;AAIA,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AAEP,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,OAAL;AAAc;AACZ,+CACKE,KADL;AAEEH,UAAAA,QAAQ,EAAE;AAFZ;AAID;;AACD,SAAKE,OAAL;AAAc;AACZ,+CACKC,KADL;AAEEH,UAAAA,QAAQ,EAAE;AAFZ;AAID;;AACD;AAAS;AACP,iCACKG,KADL;AAGD;AAjBH;AAmBD,CApBD","sourcesContent":["import { produce } from \"immer\";\n\nconst initialState = {\n  isSignIn: true,\n};\n\nexport const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_UP = \"SIGN_UP\";\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SIGN_IN: {\n      return {\n        ...state,\n        isSignIn: true,\n      };\n    }\n    case SIGN_UP: {\n      return {\n        ...state,\n        isSignIn: false,\n      };\n    }\n    default: {\n      return {\n        ...state,\n      };\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}