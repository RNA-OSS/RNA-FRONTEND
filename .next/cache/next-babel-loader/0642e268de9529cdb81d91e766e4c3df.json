{"ast":null,"code":"var _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/Group/index.jsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport * as Styled from \"./style\";\nimport List, { ListDirection, ListSort } from \"../../molecules/List\";\nimport ListItem, { ItemSelfSort, ItemSort } from \"../../molecules/ListItem\";\nimport Title, { TitleSize, TitleWeight } from \"../../atoms/Title\";\nimport Span, { SpanSize, SpanColor } from \"../../atoms/Span\";\nimport Button from \"../../atoms/Button\";\nimport Box, { BoxDirection, BoxSort, BoxWrap } from \"../../molecules/Box\";\nconst dummyGroups = [{\n  id: 1,\n  title: \"Web Frontend Study\",\n  mentor: \"조재권\",\n  dDay: \"D-1\",\n  heads: 12,\n  maxHeads: 30,\n  period: \"20.03.16-20.06.21\"\n}, {\n  id: 2,\n  title: \"Data structure\",\n  mentor: \"이윤우\",\n  dDay: \"D-1\",\n  heads: 7,\n  maxHeads: 10,\n  period: \"20.03.16-20.06.20\"\n}, {\n  id: 3,\n  title: \"Algorithm masters\",\n  mentor: \"이현재\",\n  dDay: \"D-21\",\n  heads: 21,\n  maxHeads: 30,\n  period: \"20.03.16-20.12.11\"\n}, {\n  id: 4,\n  title: \"Photoshop lecture\",\n  mentor: \"잼누팍\",\n  dDay: \"D-10\",\n  heads: 10,\n  maxHeads: 20,\n  period: \"20.03.16-20.12.11\"\n}];\n\nconst Group = () => {\n  let renderGroupItem = groupList => groupList.map(data => __jsx(List, {\n    direction: ListDirection.COL,\n    sort: ListSort.SPACE_BETWEEN_CENTER,\n    width: \"32%\",\n    height: \"393px\",\n    mar: [0, 0, 2, 0],\n    card: true,\n    shadow: true,\n    key: data.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(ListItem, {\n    self: ItemSelfSort.START,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(Styled.GroupState, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, data.dDay)), __jsx(ListItem, {\n    width: \"100%\",\n    sort: ItemSort.TOP_CENTER,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(Title, {\n    size: TitleSize.s,\n    weight: TitleWeight.l,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, data.title)), __jsx(ListItem, {\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    direction: BoxDirection.COL,\n    pad: [\"2\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    sort: BoxSort.CENTER_SPACE_BETWEEN,\n    mar: [0, 0, 2, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, __jsx(Span, {\n    size: SpanSize.S,\n    color: SpanColor.GRAY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"\\uBA58\\uD1A0\"), __jsx(Span, {\n    size: SpanSize.S,\n    color: SpanColor.GRAY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, data.mentor)), __jsx(Box, {\n    sort: BoxSort.CENTER_SPACE_BETWEEN,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, __jsx(Span, {\n    size: SpanSize.S,\n    color: SpanColor.GRAY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"\\uBAA8\\uC9D1\\uC778\\uC6D0\"), __jsx(Span, {\n    size: SpanSize.S,\n    color: SpanColor.GRAY,\n    mar: [0, 0, 2, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, data.heads, \"/\", data.maxHeads)), __jsx(Box, {\n    sort: BoxSort.CENTER_SPACE_BETWEEN,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, __jsx(Span, {\n    size: SpanSize.S,\n    color: SpanColor.GRAY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"\\uD65C\\uB3D9\\uAE30\\uAC04\"), __jsx(Span, {\n    size: SpanSize.S,\n    color: SpanColor.GRAY,\n    mar: [0, 0, 2, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, data.period)))), __jsx(ListItem, {\n    width: \"100%\",\n    sort: ItemSort.TOP_CENTER,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    width: \"60%\",\n    height: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"\\uC9C0\\uC6D0\\uD558\\uAE30\"))));\n\n  return __jsx(Box, {\n    wrap: BoxWrap.WRAP,\n    sort: BoxSort.CENTER_SPACE_BETWEEN,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, renderGroupItem(dummyGroups));\n};\n\nexport default Group;","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/Group/index.jsx"],"names":["React","Styled","List","ListDirection","ListSort","ListItem","ItemSelfSort","ItemSort","Title","TitleSize","TitleWeight","Span","SpanSize","SpanColor","Button","Box","BoxDirection","BoxSort","BoxWrap","dummyGroups","id","title","mentor","dDay","heads","maxHeads","period","Group","renderGroupItem","groupList","map","data","COL","SPACE_BETWEEN_CENTER","START","TOP_CENTER","s","l","CENTER_SPACE_BETWEEN","S","GRAY","WRAP"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport * as Styled from \"./style\";\nimport List, { ListDirection, ListSort } from \"../../molecules/List\";\nimport ListItem, { ItemSelfSort, ItemSort } from \"../../molecules/ListItem\";\nimport Title, { TitleSize, TitleWeight } from \"../../atoms/Title\";\nimport Span, { SpanSize, SpanColor } from \"../../atoms/Span\";\nimport Button from \"../../atoms/Button\";\nimport Box, { BoxDirection, BoxSort, BoxWrap } from \"../../molecules/Box\";\n\nconst dummyGroups = [\n  {\n    id: 1,\n    title: \"Web Frontend Study\",\n    mentor: \"조재권\",\n    dDay: \"D-1\",\n    heads: 12,\n    maxHeads: 30,\n    period: \"20.03.16-20.06.21\",\n  },\n  {\n    id: 2,\n    title: \"Data structure\",\n    mentor: \"이윤우\",\n    dDay: \"D-1\",\n    heads: 7,\n    maxHeads: 10,\n    period: \"20.03.16-20.06.20\",\n  },\n  {\n    id: 3,\n    title: \"Algorithm masters\",\n    mentor: \"이현재\",\n    dDay: \"D-21\",\n    heads: 21,\n    maxHeads: 30,\n    period: \"20.03.16-20.12.11\",\n  },\n  {\n    id: 4,\n    title: \"Photoshop lecture\",\n    mentor: \"잼누팍\",\n    dDay: \"D-10\",\n    heads: 10,\n    maxHeads: 20,\n    period: \"20.03.16-20.12.11\",\n  },\n];\n\nconst Group = () => {\n  let renderGroupItem = (groupList) =>\n    groupList.map((data) => (\n      <List\n        direction={ListDirection.COL}\n        sort={ListSort.SPACE_BETWEEN_CENTER}\n        width=\"32%\"\n        height=\"393px\"\n        mar={[0, 0, 2, 0]}\n        card={true}\n        shadow={true}\n        key={data.id}\n      >\n        <ListItem self={ItemSelfSort.START}>\n          <Styled.GroupState>{data.dDay}</Styled.GroupState>\n        </ListItem>\n        <ListItem width=\"100%\" sort={ItemSort.TOP_CENTER}>\n          <Title size={TitleSize.s} weight={TitleWeight.l}>\n            {data.title}\n          </Title>\n        </ListItem>\n        <ListItem width=\"100%\">\n          <Box direction={BoxDirection.COL} pad={[\"2\"]}>\n            <Box sort={BoxSort.CENTER_SPACE_BETWEEN} mar={[0, 0, 2, 0]}>\n              <Span size={SpanSize.S} color={SpanColor.GRAY}>\n                멘토\n              </Span>\n              <Span size={SpanSize.S} color={SpanColor.GRAY}>\n                {data.mentor}\n              </Span>\n            </Box>\n            <Box sort={BoxSort.CENTER_SPACE_BETWEEN}>\n              <Span size={SpanSize.S} color={SpanColor.GRAY}>\n                모집인원\n              </Span>\n              <Span size={SpanSize.S} color={SpanColor.GRAY} mar={[0, 0, 2, 0]}>\n                {data.heads}/{data.maxHeads}\n              </Span>\n            </Box>\n            <Box sort={BoxSort.CENTER_SPACE_BETWEEN}>\n              <Span size={SpanSize.S} color={SpanColor.GRAY}>\n                활동기간\n              </Span>\n              <Span size={SpanSize.S} color={SpanColor.GRAY} mar={[0, 0, 2, 0]}>\n                {data.period}\n              </Span>\n            </Box>\n          </Box>\n        </ListItem>\n        <ListItem width=\"100%\" sort={ItemSort.TOP_CENTER}>\n          <Button width=\"60%\" height=\"40px\">\n            지원하기\n          </Button>\n        </ListItem>\n      </List>\n    ));\n\n  return (\n    <Box wrap={BoxWrap.WRAP} sort={BoxSort.CENTER_SPACE_BETWEEN}>\n      {renderGroupItem(dummyGroups)}\n    </Box>\n  );\n};\n\nexport default Group;\n"]},"metadata":{},"sourceType":"module"}