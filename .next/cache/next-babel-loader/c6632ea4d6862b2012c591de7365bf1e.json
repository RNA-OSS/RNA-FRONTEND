{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/Board/index.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport propTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Styled from \"./style\";\nimport Title, { TitleSize, TitleWeight } from \"../../atoms/Title\";\nimport Table from \"../../molecules/Table\";\nimport Box, { BoxSort } from \"../../molecules/Box\";\nimport Span from \"../../atoms/Span\";\nimport Button, { ButtonFontSize } from \"../../atoms/Button\";\nimport { LOAD_POST_LISTS_REQUEST, LOAD_POST_REQUEST } from \"../../../reducers/post\";\nvar HeadData = [{\n  name: \"번호\",\n  width: \"10%\"\n}, {\n  name: \"제목\",\n  width: \"60%\"\n}, {\n  name: \"작성자\",\n  width: \"15%\"\n}, {\n  name: \"날짜\",\n  width: \"15%\"\n}];\n\nvar Board = function Board() {\n  _s();\n\n  var _useState = useState(1),\n      currentIndex = _useState[0],\n      setCurrentIndex = _useState[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.postReducer;\n  }),\n      postLists = _useSelector.postLists,\n      isLoadedPostLists = _useSelector.isLoadedPostLists;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POST_LISTS_REQUEST\n    });\n  }, []);\n  var onClickMoveIndex = useCallback(function (index) {\n    setCurrentIndex(index);\n  }, [currentIndex]);\n  var onClickPost = useCallback(function (postId) {\n    dispatch({\n      type: LOAD_POST_REQUEST,\n      postId: postId\n    });\n  }, []);\n\n  var renderPageIndexButtons = function renderPageIndexButtons() {\n    return __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, currentIndex - 4 >= 1 && __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, __jsx(Styled.CurrentPageButton, {\n      onClick: function onClick() {\n        return onClickMoveIndex(1);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"1\"), __jsx(Span, {\n      mar: [0, 1.5, 0, 0],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"...\")), __jsx(Styled.CurrentPageButton, {\n      current: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, currentIndex), currentIndex + 4 <= postLists.length && __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, __jsx(Span, {\n      mar: [0, 1.5, 0, 0],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"...\"), __jsx(Styled.CurrentPageButton, {\n      onClick: function onClick() {\n        return onClickMoveIndex(postLists.length);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, postLists.length)));\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    sort: BoxSort.CENTER_LEFT,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, __jsx(Title, {\n    size: TitleSize.xs,\n    weight: TitleWeight.l,\n    mar: [2, 0, 2, 2],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"\\uAC8C\\uC2DC\\uD310\")), __jsx(Box, {\n    sort: BoxSort.TOP_RIGHT,\n    mar: [0, 0, 2, 0],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    width: \"100px\",\n    height: \"34px\",\n    fontSize: ButtonFontSize.S,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"\\uAE00\\uC4F0\\uAE30\")), isLoadedPostLists && __jsx(Styled.TableContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    hover: true,\n    headData: HeadData,\n    bodyData: postLists[currentIndex - 1],\n    onClickTd: function onClickTd() {\n      return onClickPost();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    sort: BoxSort.CENTER_CENTER,\n    mar: [2, 0],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, currentIndex !== 1 && __jsx(Styled.PreviousButton, {\n    onClick: function onClick() {\n      return onClickMoveIndex(currentIndex - 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), renderPageIndexButtons(), currentIndex !== postLists.length && __jsx(Styled.NextButton, {\n    onClick: function onClick() {\n      return onClickMoveIndex(currentIndex + 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(Board, \"Vg2nR73U3PCgeV+Whkn9Rp8SVsE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Board;\nBoard.propTypes = {};\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/Board/index.jsx"],"names":["React","useState","useEffect","useCallback","propTypes","useDispatch","useSelector","Styled","Title","TitleSize","TitleWeight","Table","Box","BoxSort","Span","Button","ButtonFontSize","LOAD_POST_LISTS_REQUEST","LOAD_POST_REQUEST","HeadData","name","width","Board","currentIndex","setCurrentIndex","dispatch","state","postReducer","postLists","isLoadedPostLists","type","onClickMoveIndex","index","onClickPost","postId","renderPageIndexButtons","length","CENTER_LEFT","xs","l","TOP_RIGHT","S","CENTER_CENTER"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport propTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport * as Styled from \"./style\";\nimport Title, { TitleSize, TitleWeight } from \"../../atoms/Title\";\nimport Table from \"../../molecules/Table\";\nimport Box, { BoxSort } from \"../../molecules/Box\";\nimport Span from \"../../atoms/Span\";\nimport Button, { ButtonFontSize } from \"../../atoms/Button\";\nimport {\n  LOAD_POST_LISTS_REQUEST,\n  LOAD_POST_REQUEST,\n} from \"../../../reducers/post\";\n\nconst HeadData = [\n  { name: \"번호\", width: \"10%\" },\n  { name: \"제목\", width: \"60%\" },\n  { name: \"작성자\", width: \"15%\" },\n  { name: \"날짜\", width: \"15%\" },\n];\n\nconst Board = () => {\n  const [currentIndex, setCurrentIndex] = useState(1);\n  const dispatch = useDispatch();\n  const { postLists, isLoadedPostLists } = useSelector(\n    (state) => state.postReducer\n  );\n\n  useEffect(() => {\n    dispatch({ type: LOAD_POST_LISTS_REQUEST });\n  }, []);\n\n  const onClickMoveIndex = useCallback(\n    (index) => {\n      setCurrentIndex(index);\n    },\n    [currentIndex]\n  );\n\n  const onClickPost = useCallback((postId) => {\n    dispatch({ type: LOAD_POST_REQUEST, postId: postId });\n  }, []);\n\n  const renderPageIndexButtons = () => {\n    return (\n      <React.Fragment>\n        {currentIndex - 4 >= 1 && (\n          <React.Fragment>\n            <Styled.CurrentPageButton onClick={() => onClickMoveIndex(1)}>\n              1\n            </Styled.CurrentPageButton>\n            <Span mar={[0, 1.5, 0, 0]}>...</Span>\n          </React.Fragment>\n        )}\n        <Styled.CurrentPageButton current>\n          {currentIndex}\n        </Styled.CurrentPageButton>\n        {currentIndex + 4 <= postLists.length && (\n          <React.Fragment>\n            <Span mar={[0, 1.5, 0, 0]}>...</Span>\n            <Styled.CurrentPageButton\n              onClick={() => onClickMoveIndex(postLists.length)}\n            >\n              {postLists.length}\n            </Styled.CurrentPageButton>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <Box sort={BoxSort.CENTER_LEFT}>\n        <Title size={TitleSize.xs} weight={TitleWeight.l} mar={[2, 0, 2, 2]}>\n          게시판\n        </Title>\n      </Box>\n      <Box sort={BoxSort.TOP_RIGHT} mar={[0, 0, 2, 0]}>\n        <Button width=\"100px\" height=\"34px\" fontSize={ButtonFontSize.S}>\n          글쓰기\n        </Button>\n      </Box>\n      {isLoadedPostLists && (\n        <Styled.TableContainer>\n          <Table\n            hover={true}\n            headData={HeadData}\n            bodyData={postLists[currentIndex - 1]}\n            onClickTd={() => onClickPost()}\n          />\n        </Styled.TableContainer>\n      )}\n\n      <Box sort={BoxSort.CENTER_CENTER} mar={[2, 0]}>\n        {currentIndex !== 1 && (\n          <Styled.PreviousButton\n            onClick={() => onClickMoveIndex(currentIndex - 1)}\n          />\n        )}\n        {renderPageIndexButtons()}\n        {currentIndex !== postLists.length && (\n          <Styled.NextButton\n            onClick={() => onClickMoveIndex(currentIndex + 1)}\n          />\n        )}\n      </Box>\n    </React.Fragment>\n  );\n};\n\nBoard.propTypes = {};\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}