{"ast":null,"code":"var _require = require(\"next-redux-wrapper\"),\n    createWrapper = _require.createWrapper;\n\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"../reducers\";\n\nvar configureStore = function configureStore() {\n  var middlewares = [];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(rootReducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/store/configureStore.js"],"names":["require","createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","rootReducer","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"eAA0BA,OAAO,CAAC,oBAAD,C;IAAzBC,a,YAAAA,a;;AACR,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,aAAxB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,QAAQ,GACZ,QACIL,OAAO,CAACF,eAAe,MAAf,SAAmBM,WAAnB,CAAD,CADX,GAEIH,mBAAmB,CAACH,eAAe,MAAf,SAAmBM,WAAnB,CAAD,CAHzB;AAKA,MAAME,KAAK,GAAGP,WAAW,CAACG,WAAD,EAAcG,QAAd,CAAzB;AACA,SAAOC,KAAP;AACD,CATD;;AAWA,IAAMC,OAAO,GAAGV,aAAa,CAACM,cAAD,EAAiB;AAC5CK,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["const { createWrapper } = require(\"next-redux-wrapper\");\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"../reducers\";\n\nconst configureStore = () => {\n  const middlewares = [];\n  const enhancer =\n    process.env.NODE_ENV === \"production\"\n      ? compose(applyMiddleware(...middlewares))\n      : composeWithDevTools(applyMiddleware(...middlewares));\n\n  const store = createStore(rootReducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}