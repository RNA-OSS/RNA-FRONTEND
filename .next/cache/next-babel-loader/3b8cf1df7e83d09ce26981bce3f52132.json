{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/Board/index.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport propTypes from \"prop-types\";\nimport * as Styled from \"./style\";\nimport usePost from \"../../../hooks/usePost\";\nimport Post from \"../Post\";\nimport Loading from \"../../atoms/Loading\";\nimport Title, { TitleSize, TitleWeight } from \"../../atoms/Title\";\nimport Table from \"../../molecules/Table\";\nimport Box, { BoxSort } from \"../../molecules/Box\";\nimport Span from \"../../atoms/Span\";\nimport Button, { ButtonFontSize } from \"../../atoms/Button\";\nvar HeadData = [{\n  name: \"번호\",\n  width: \"10%\"\n}, {\n  name: \"제목\",\n  width: \"60%\"\n}, {\n  name: \"작성자\",\n  width: \"15%\"\n}, {\n  name: \"날짜\",\n  width: \"15%\"\n}];\n\nvar Board = function Board() {\n  _s();\n\n  var _useState = useState(1),\n      currentIndex = _useState[0],\n      setCurrentIndex = _useState[1];\n\n  var _useState2 = useState(false),\n      showPost = _useState2[0],\n      setShowPost = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.postReducer;\n  }),\n      isLoadedPost = _useSelector.isLoadedPost,\n      post = _useSelector.post,\n      postLists = _useSelector.postLists,\n      isLoadedPostLists = _useSelector.isLoadedPostLists;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POST_LISTS_REQUEST\n    });\n  }, []);\n  var onClickMoveIndex = useCallback(function (index) {\n    setCurrentIndex(index);\n  }, [currentIndex]);\n\n  var renderPageIndexButtons = function renderPageIndexButtons() {\n    return __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, currentIndex - 4 >= 1 && __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, __jsx(Styled.CurrentPageButton, {\n      onClick: function onClick() {\n        return onClickMoveIndex(1);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \"1\"), __jsx(Span, {\n      mar: [0, 1.5, 0, 0],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"...\")), __jsx(Styled.CurrentPageButton, {\n      current: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, currentIndex), currentIndex + 4 <= postLists.length && __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, __jsx(Span, {\n      mar: [0, 1.5, 0, 0],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"...\"), __jsx(Styled.CurrentPageButton, {\n      onClick: function onClick() {\n        return onClickMoveIndex(postLists.length);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, postLists.length)));\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, isLoadedPost ? __jsx(Post, {\n    postData: post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }) : __jsx(Box, {\n    height: \"676px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    sort: BoxSort.CENTER_LEFT,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(Title, {\n    size: TitleSize.xs,\n    weight: TitleWeight.l,\n    mar: [2, 0, 2, 2],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"\\uAC8C\\uC2DC\\uD310\")), __jsx(Box, {\n    sort: BoxSort.TOP_RIGHT,\n    mar: [0, 0, 2, 0],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    width: \"100px\",\n    height: \"34px\",\n    fontSize: ButtonFontSize.S,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"\\uAE00\\uC4F0\\uAE30\")), isLoadedPostLists && __jsx(Styled.TableContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    hover: true,\n    headData: HeadData,\n    bodyData: postLists[currentIndex - 1],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    sort: BoxSort.CENTER_CENTER,\n    mar: [2, 0],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, currentIndex !== 1 && __jsx(Styled.PreviousButton, {\n    onClick: function onClick() {\n      return onClickMoveIndex(currentIndex - 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), renderPageIndexButtons(), currentIndex !== postLists.length && __jsx(Styled.NextButton, {\n    onClick: function onClick() {\n      return onClickMoveIndex(currentIndex + 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(Board, \"Nc3/lSv22lsc5gbwIwaEh0B/V60=\", true);\n\n_c = Board;\nBoard.propTypes = {};\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/Board/index.jsx"],"names":["React","useState","useEffect","useCallback","propTypes","Styled","usePost","Post","Loading","Title","TitleSize","TitleWeight","Table","Box","BoxSort","Span","Button","ButtonFontSize","HeadData","name","width","Board","currentIndex","setCurrentIndex","showPost","setShowPost","dispatch","useDispatch","useSelector","state","postReducer","isLoadedPost","post","postLists","isLoadedPostLists","type","LOAD_POST_LISTS_REQUEST","onClickMoveIndex","index","renderPageIndexButtons","length","CENTER_LEFT","xs","l","TOP_RIGHT","S","CENTER_CENTER"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport propTypes from \"prop-types\";\n\nimport * as Styled from \"./style\";\n\nimport usePost from \"../../../hooks/usePost\";\n\nimport Post from \"../Post\";\nimport Loading from \"../../atoms/Loading\";\nimport Title, { TitleSize, TitleWeight } from \"../../atoms/Title\";\nimport Table from \"../../molecules/Table\";\nimport Box, { BoxSort } from \"../../molecules/Box\";\nimport Span from \"../../atoms/Span\";\nimport Button, { ButtonFontSize } from \"../../atoms/Button\";\n\nconst HeadData = [\n  { name: \"번호\", width: \"10%\" },\n  { name: \"제목\", width: \"60%\" },\n  { name: \"작성자\", width: \"15%\" },\n  { name: \"날짜\", width: \"15%\" },\n];\n\nconst Board = () => {\n  const [currentIndex, setCurrentIndex] = useState(1);\n  const [showPost, setShowPost] = useState(false);\n  const dispatch = useDispatch();\n  const { isLoadedPost, post, postLists, isLoadedPostLists } = useSelector(\n    (state) => state.postReducer\n  );\n\n  useEffect(() => {\n    dispatch({ type: LOAD_POST_LISTS_REQUEST });\n  }, []);\n\n  const onClickMoveIndex = useCallback(\n    (index) => {\n      setCurrentIndex(index);\n    },\n    [currentIndex]\n  );\n\n  const renderPageIndexButtons = () => {\n    return (\n      <React.Fragment>\n        {currentIndex - 4 >= 1 && (\n          <React.Fragment>\n            <Styled.CurrentPageButton onClick={() => onClickMoveIndex(1)}>\n              1\n            </Styled.CurrentPageButton>\n            <Span mar={[0, 1.5, 0, 0]}>...</Span>\n          </React.Fragment>\n        )}\n        <Styled.CurrentPageButton current>\n          {currentIndex}\n        </Styled.CurrentPageButton>\n        {currentIndex + 4 <= postLists.length && (\n          <React.Fragment>\n            <Span mar={[0, 1.5, 0, 0]}>...</Span>\n            <Styled.CurrentPageButton\n              onClick={() => onClickMoveIndex(postLists.length)}\n            >\n              {postLists.length}\n            </Styled.CurrentPageButton>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      {isLoadedPost ? (\n        <Post postData={post} />\n      ) : (\n        <Box height=\"676px\">\n          <Loading />\n        </Box>\n      )}\n\n      <Box sort={BoxSort.CENTER_LEFT}>\n        <Title size={TitleSize.xs} weight={TitleWeight.l} mar={[2, 0, 2, 2]}>\n          게시판\n        </Title>\n      </Box>\n      <Box sort={BoxSort.TOP_RIGHT} mar={[0, 0, 2, 0]}>\n        <Button width=\"100px\" height=\"34px\" fontSize={ButtonFontSize.S}>\n          글쓰기\n        </Button>\n      </Box>\n      {isLoadedPostLists && (\n        <Styled.TableContainer>\n          <Table\n            hover={true}\n            headData={HeadData}\n            bodyData={postLists[currentIndex - 1]}\n          />\n        </Styled.TableContainer>\n      )}\n\n      <Box sort={BoxSort.CENTER_CENTER} mar={[2, 0]}>\n        {currentIndex !== 1 && (\n          <Styled.PreviousButton\n            onClick={() => onClickMoveIndex(currentIndex - 1)}\n          />\n        )}\n        {renderPageIndexButtons()}\n        {currentIndex !== postLists.length && (\n          <Styled.NextButton\n            onClick={() => onClickMoveIndex(currentIndex + 1)}\n          />\n        )}\n      </Box>\n    </React.Fragment>\n  );\n};\n\nBoard.propTypes = {};\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}