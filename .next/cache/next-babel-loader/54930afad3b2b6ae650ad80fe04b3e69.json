{"ast":null,"code":"var _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/Comment/index.jsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport * as Styled from \"./style\";\nimport Box, { BoxSort } from \"../../molecules/Box\";\nimport Span, { SpanWeight, SpanColor } from \"../../atoms/Span\";\nimport TextArea from \"../../atoms/TextArea\";\nimport Button, { ButtonColor, ButtonFontSize } from \"../../atoms/Button\";\nimport useInput from \"../../../hooks/useInput\";\n\nconst Comment = ({\n  commentLists\n}) => {\n  const [contents, onChangeContents] = useInput(\"\");\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, commentLists && commentLists.map(comment => !comment.responseTo && __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 47\n    }\n  })), __jsx(Styled.CommentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    sort: BoxSort.CENTER_SPACE_BETWEEN,\n    mar: [0, 0, 1, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(Span, {\n    weight: SpanWeight.L,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"\\uD638\\uD638\\uD638\\uC7BC\\uB204\\uCFE4\"), __jsx(Span, {\n    color: SpanColor.GRAY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, contents.length, \"/1000\")), __jsx(TextArea, {\n    id: \"input-comment\",\n    value: contents,\n    onChange: onChangeContents,\n    height: \"60px\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    width: \"50px\",\n    height: \"34px\",\n    fontSize: ButtonFontSize.S,\n    fontColor: ButtonColor.MAIN,\n    backgroundColor: ButtonColor.LIGHT_MAIN,\n    shadow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"\\uB4F1\\uB85D\")));\n};\n\nComment.propTypes = {\n  commentLists: propTypes.array\n};\nexport default Comment;","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/Comment/index.jsx"],"names":["React","propTypes","Styled","Box","BoxSort","Span","SpanWeight","SpanColor","TextArea","Button","ButtonColor","ButtonFontSize","useInput","Comment","commentLists","contents","onChangeContents","map","comment","responseTo","CENTER_SPACE_BETWEEN","L","GRAY","length","S","MAIN","LIGHT_MAIN","array"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,SAAxB;AACA,OAAOC,GAAP,IAAcC,OAAd,QAA6B,qBAA7B;AACA,OAAOC,IAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA4C,kBAA5C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,MAAP,IAAiBC,WAAjB,EAA8BC,cAA9B,QAAoD,oBAApD;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AACpC,QAAM,CAACC,QAAD,EAAWC,gBAAX,IAA+BJ,QAAQ,CAAC,EAAD,CAA7C;AAEA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,YAAY,IACXA,YAAY,CAACG,GAAb,CACGC,OAAD,IAAa,CAACA,OAAO,CAACC,UAAT,IAAuB,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtC,CAFJ,EAME,MAAC,MAAD,CAAQ,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAEf,OAAO,CAACgB,oBAAnB;AAAyC,IAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,MAAM,EAAEd,UAAU,CAACe,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,EAEE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,SAAS,CAACe,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BP,QAAQ,CAACQ,MAAvC,UAFF,CADF,EAKE,MAAC,QAAD;AACE,IAAA,EAAE,EAAC,eADL;AAEE,IAAA,KAAK,EAAER,QAFT;AAGE,IAAA,QAAQ,EAAEC,gBAHZ;AAIE,IAAA,MAAM,EAAC,MAJT;AAKE,IAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAYE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,QAAQ,EAAEL,cAAc,CAACa,CAH3B;AAIE,IAAA,SAAS,EAAEd,WAAW,CAACe,IAJzB;AAKE,IAAA,eAAe,EAAEf,WAAW,CAACgB,UAL/B;AAME,IAAA,MAAM,EAAE,IANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF,CANF,CADF;AAgCD,CAnCD;;AAqCAb,OAAO,CAACZ,SAAR,GAAoB;AAClBa,EAAAA,YAAY,EAAEb,SAAS,CAAC0B;AADN,CAApB;AAIA,eAAed,OAAf","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\n\nimport * as Styled from \"./style\";\nimport Box, { BoxSort } from \"../../molecules/Box\";\nimport Span, { SpanWeight, SpanColor } from \"../../atoms/Span\";\nimport TextArea from \"../../atoms/TextArea\";\nimport Button, { ButtonColor, ButtonFontSize } from \"../../atoms/Button\";\nimport useInput from \"../../../hooks/useInput\";\n\nconst Comment = ({ commentLists }) => {\n  const [contents, onChangeContents] = useInput(\"\");\n\n  return (\n    <React.Fragment>\n      {commentLists &&\n        commentLists.map(\n          (comment) => !comment.responseTo && <React.Fragment></React.Fragment>\n        )}\n\n      <Styled.CommentContainer>\n        <Box sort={BoxSort.CENTER_SPACE_BETWEEN} mar={[0, 0, 1, 0]}>\n          <Span weight={SpanWeight.L}>호호호잼누쿤</Span>\n          <Span color={SpanColor.GRAY}>{contents.length}/1000</Span>\n        </Box>\n        <TextArea\n          id=\"input-comment\"\n          value={contents}\n          onChange={onChangeContents}\n          height=\"60px\"\n          required\n        />\n        <Button\n          width=\"50px\"\n          height=\"34px\"\n          fontSize={ButtonFontSize.S}\n          fontColor={ButtonColor.MAIN}\n          backgroundColor={ButtonColor.LIGHT_MAIN}\n          shadow={true}\n        >\n          등록\n        </Button>\n      </Styled.CommentContainer>\n    </React.Fragment>\n  );\n};\n\nComment.propTypes = {\n  commentLists: propTypes.array,\n};\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}