{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/molecules/Td/index.jsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport * as Styled from \"./style\";\nimport Span, { SpanSize, SpanWeight, SpanType } from \"../../atoms/Span\";\nimport { CalculateBox } from \"../../../utils\";\nexport var TextAlign = {\n  LEFT: \"left\",\n  CENTER: \"center\",\n  RIGHT: \"right\"\n};\n\nvar Td = function Td(_ref) {\n  var children = _ref.children,\n      _ref$pad = _ref.pad,\n      pad = _ref$pad === void 0 ? [0] : _ref$pad;\n  var padding = CalculateBox(pad);\n  return __jsx(Styled.Td, {\n    padding: padding,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(Span, {\n    size: SpanSize.s,\n    weight: SpanWeight.m,\n    type: SpanType.gray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, children));\n};\n\n_c = Td;\nTd.propTypes = {\n  children: propTypes.node.isRequired\n};\nexport default Td;\n\nvar _c;\n\n$RefreshReg$(_c, \"Td\");","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/molecules/Td/index.jsx"],"names":["React","propTypes","Styled","Span","SpanSize","SpanWeight","SpanType","CalculateBox","TextAlign","LEFT","CENTER","RIGHT","Td","children","pad","padding","s","m","gray","node","isRequired"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,SAAxB;AACA,OAAOC,IAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,QAArC,QAAqD,kBAArD;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,OAAO,IAAMC,SAAS,GAAG;AACvBC,EAAAA,IAAI,EAAE,MADiB;AAEvBC,EAAAA,MAAM,EAAE,QAFe;AAGvBC,EAAAA,KAAK,EAAE;AAHgB,CAAlB;;AAMP,IAAMC,EAAE,GAAG,SAALA,EAAK,OAA6B;AAAA,MAA1BC,QAA0B,QAA1BA,QAA0B;AAAA,sBAAhBC,GAAgB;AAAA,MAAhBA,GAAgB,yBAAV,CAAC,CAAD,CAAU;AACtC,MAAMC,OAAO,GAAGR,YAAY,CAACO,GAAD,CAA5B;AAEA,SACE,MAAC,MAAD,CAAQ,EAAR;AAAW,IAAA,OAAO,EAAEC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEX,QAAQ,CAACY,CAArB;AAAwB,IAAA,MAAM,EAAEX,UAAU,CAACY,CAA3C;AAA8C,IAAA,IAAI,EAAEX,QAAQ,CAACY,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QADH,CADF,CADF;AAOD,CAVD;;KAAMD,E;AAYNA,EAAE,CAACX,SAAH,GAAe;AACbY,EAAAA,QAAQ,EAAEZ,SAAS,CAACkB,IAAV,CAAeC;AADZ,CAAf;AAIA,eAAeR,EAAf","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\n\nimport * as Styled from \"./style\";\nimport Span, { SpanSize, SpanWeight, SpanType } from \"../../atoms/Span\";\nimport { CalculateBox } from \"../../../utils\";\n\nexport const TextAlign = {\n  LEFT: \"left\",\n  CENTER: \"center\",\n  RIGHT: \"right\",\n};\n\nconst Td = ({ children, pad = [0] }) => {\n  const padding = CalculateBox(pad);\n\n  return (\n    <Styled.Td padding={padding}>\n      <Span size={SpanSize.s} weight={SpanWeight.m} type={SpanType.gray}>\n        {children}\n      </Span>\n    </Styled.Td>\n  );\n};\n\nTd.propTypes = {\n  children: propTypes.node.isRequired,\n};\n\nexport default Td;\n"]},"metadata":{},"sourceType":"module"}