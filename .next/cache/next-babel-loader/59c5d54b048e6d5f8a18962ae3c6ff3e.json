{"ast":null,"code":"var _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/atoms/Button/index.jsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport * as Styled from \"./style\";\nimport { TEXT_S, TEXT_M, TEXT_L } from \"../../../public/font\";\nimport { WHITE, MAIN_COLOR, LIGHT_MAIN_COLOR, DARK_GRAY } from \"../../../public/color\";\nimport { CalculateBox } from \"../../../utils\";\nexport const ButtonFontSize = {\n  S: TEXT_S,\n  M: TEXT_M,\n  L: TEXT_L\n};\nexport const ButtonColor = {\n  MAIN: MAIN_COLOR,\n  LIGHT_MAIN: LIGHT_MAIN_COLOR,\n  WHITE: WHITE,\n  GRAY: DARK_GRAY\n};\n\nconst Button = ({\n  children,\n  width = \"60px\",\n  height = \"30px\",\n  fontSize = ButtonFontSize.M,\n  fontColor = ButtonColor.WHITE,\n  backgroundColor = ButtonColor.MAIN,\n  mar = [0],\n  shadow = false,\n  hover = false,\n  onClick\n}) => {\n  const margin = CalculateBox(mar);\n  return __jsx(Styled.Button, {\n    width: width,\n    height: height,\n    fontSize: fontSize,\n    fontColor: fontColor,\n    backgroundColor: backgroundColor,\n    shadow: shadow,\n    hover: hover,\n    margin: margin,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nButton.prototype = {\n  children: propTypes.node.isRequired,\n  onClick: propTypes.func,\n  width: propTypes.string,\n  height: propTypes.string,\n  fontSize: propTypes.string,\n  fontColor: propTypes.string,\n  backgroundColor: propTypes.string,\n  shadow: propTypes.bool,\n  hover: propTypes.bool,\n  mar: propTypes.array,\n  onClick: propTypes.func\n};\nexport default Button;","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/atoms/Button/index.jsx"],"names":["React","propTypes","Styled","TEXT_S","TEXT_M","TEXT_L","WHITE","MAIN_COLOR","LIGHT_MAIN_COLOR","DARK_GRAY","CalculateBox","ButtonFontSize","S","M","L","ButtonColor","MAIN","LIGHT_MAIN","GRAY","Button","children","width","height","fontSize","fontColor","backgroundColor","mar","shadow","hover","onClick","margin","prototype","node","isRequired","func","string","bool","array"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,MAAZ,MAAwB,SAAxB;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,QAAuC,sBAAvC;AACA,SACEC,KADF,EAEEC,UAFF,EAGEC,gBAHF,EAIEC,SAJF,QAKO,uBALP;AAMA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,OAAO,MAAMC,cAAc,GAAG;AAC5BC,EAAAA,CAAC,EAAET,MADyB;AAE5BU,EAAAA,CAAC,EAAET,MAFyB;AAG5BU,EAAAA,CAAC,EAAET;AAHyB,CAAvB;AAMP,OAAO,MAAMU,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAET,UADmB;AAEzBU,EAAAA,UAAU,EAAET,gBAFa;AAGzBF,EAAAA,KAAK,EAAEA,KAHkB;AAIzBY,EAAAA,IAAI,EAAET;AAJmB,CAApB;;AAOP,MAAMU,MAAM,GAAG,CAAC;AACdC,EAAAA,QADc;AAEdC,EAAAA,KAAK,GAAG,MAFM;AAGdC,EAAAA,MAAM,GAAG,MAHK;AAIdC,EAAAA,QAAQ,GAAGZ,cAAc,CAACE,CAJZ;AAKdW,EAAAA,SAAS,GAAGT,WAAW,CAACT,KALV;AAMdmB,EAAAA,eAAe,GAAGV,WAAW,CAACC,IANhB;AAOdU,EAAAA,GAAG,GAAG,CAAC,CAAD,CAPQ;AAQdC,EAAAA,MAAM,GAAG,KARK;AASdC,EAAAA,KAAK,GAAG,KATM;AAUdC,EAAAA;AAVc,CAAD,KAWT;AACJ,QAAMC,MAAM,GAAGpB,YAAY,CAACgB,GAAD,CAA3B;AAEA,SACE,MAAC,MAAD,CAAQ,MAAR;AACE,IAAA,KAAK,EAAEL,KADT;AAEE,IAAA,MAAM,EAAEC,MAFV;AAGE,IAAA,QAAQ,EAAEC,QAHZ;AAIE,IAAA,SAAS,EAAEC,SAJb;AAKE,IAAA,eAAe,EAAEC,eALnB;AAME,IAAA,MAAM,EAAEE,MANV;AAOE,IAAA,KAAK,EAAEC,KAPT;AAQE,IAAA,MAAM,EAAEE,MARV;AASE,IAAA,OAAO,EAAED,OATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGT,QAXH,CADF;AAeD,CA7BD;;AA+BAD,MAAM,CAACY,SAAP,GAAmB;AACjBX,EAAAA,QAAQ,EAAEnB,SAAS,CAAC+B,IAAV,CAAeC,UADR;AAEjBJ,EAAAA,OAAO,EAAE5B,SAAS,CAACiC,IAFF;AAGjBb,EAAAA,KAAK,EAAEpB,SAAS,CAACkC,MAHA;AAIjBb,EAAAA,MAAM,EAAErB,SAAS,CAACkC,MAJD;AAKjBZ,EAAAA,QAAQ,EAAEtB,SAAS,CAACkC,MALH;AAMjBX,EAAAA,SAAS,EAAEvB,SAAS,CAACkC,MANJ;AAOjBV,EAAAA,eAAe,EAAExB,SAAS,CAACkC,MAPV;AAQjBR,EAAAA,MAAM,EAAE1B,SAAS,CAACmC,IARD;AASjBR,EAAAA,KAAK,EAAE3B,SAAS,CAACmC,IATA;AAUjBV,EAAAA,GAAG,EAAEzB,SAAS,CAACoC,KAVE;AAWjBR,EAAAA,OAAO,EAAE5B,SAAS,CAACiC;AAXF,CAAnB;AAcA,eAAef,MAAf","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\nimport * as Styled from \"./style\";\n\nimport { TEXT_S, TEXT_M, TEXT_L } from \"../../../public/font\";\nimport {\n  WHITE,\n  MAIN_COLOR,\n  LIGHT_MAIN_COLOR,\n  DARK_GRAY,\n} from \"../../../public/color\";\nimport { CalculateBox } from \"../../../utils\";\n\nexport const ButtonFontSize = {\n  S: TEXT_S,\n  M: TEXT_M,\n  L: TEXT_L,\n};\n\nexport const ButtonColor = {\n  MAIN: MAIN_COLOR,\n  LIGHT_MAIN: LIGHT_MAIN_COLOR,\n  WHITE: WHITE,\n  GRAY: DARK_GRAY,\n};\n\nconst Button = ({\n  children,\n  width = \"60px\",\n  height = \"30px\",\n  fontSize = ButtonFontSize.M,\n  fontColor = ButtonColor.WHITE,\n  backgroundColor = ButtonColor.MAIN,\n  mar = [0],\n  shadow = false,\n  hover = false,\n  onClick,\n}) => {\n  const margin = CalculateBox(mar);\n\n  return (\n    <Styled.Button\n      width={width}\n      height={height}\n      fontSize={fontSize}\n      fontColor={fontColor}\n      backgroundColor={backgroundColor}\n      shadow={shadow}\n      hover={hover}\n      margin={margin}\n      onClick={onClick}\n    >\n      {children}\n    </Styled.Button>\n  );\n};\n\nButton.prototype = {\n  children: propTypes.node.isRequired,\n  onClick: propTypes.func,\n  width: propTypes.string,\n  height: propTypes.string,\n  fontSize: propTypes.string,\n  fontColor: propTypes.string,\n  backgroundColor: propTypes.string,\n  shadow: propTypes.bool,\n  hover: propTypes.bool,\n  mar: propTypes.array,\n  onClick: propTypes.func,\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}