{"ast":null,"code":"var _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/Comment/index.jsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Router, { useRouter } from \"next/router\";\nimport propTypes from \"prop-types\";\nimport * as Styled from \"./style\";\nimport SingleComment from \"../SingleComment\";\nimport Border from \"../../molecules/Border\";\nimport Box, { BoxSort, BoxDirection } from \"../../molecules/Box\";\nimport Span, { SpanWeight, SpanColor } from \"../../atoms/Span\";\nimport TextArea from \"../../atoms/TextArea\";\nimport Button, { ButtonColor, ButtonFontSize } from \"../../atoms/Button\";\nimport useInput from \"../../../hooks/useInput\";\n\nconst Comment = ({\n  commentLists\n}) => {\n  const [contents, onChangeContents] = useInput(\"\");\n  const router = useRouter();\n  const {\n    postId\n  } = router.query;\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, console.log(postId), commentLists && commentLists.map(comment => __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, __jsx(Border, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), __jsx(SingleComment, {\n    comment: comment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }))), __jsx(Styled.CommentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    sort: BoxSort.CENTER_SPACE_BETWEEN,\n    mar: [0, 0, 1, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Span, {\n    weight: SpanWeight.L,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"\\uD638\\uD638\\uD638\\uC7BC\\uB204\\uCFE4\"), __jsx(Span, {\n    color: SpanColor.GRAY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, contents.length, \"/1000\")), __jsx(Box, {\n    direction: BoxDirection.ROW,\n    sort: BoxSort.BOTTOM_SPACE_BETWEEN,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(TextArea, {\n    id: \"input-comment\",\n    value: contents,\n    onChange: onChangeContents,\n    height: \"60px\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    width: \"50px\",\n    height: \"34px\",\n    fontSize: ButtonFontSize.S,\n    fontColor: ButtonColor.MAIN,\n    backgroundColor: ButtonColor.LIGHT_MAIN,\n    shadow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"\\uB4F1\\uB85D\"))));\n};\n\nComment.propTypes = {\n  commentLists: propTypes.array\n};\nexport default Comment;","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/organisms/Comment/index.jsx"],"names":["React","Router","useRouter","propTypes","Styled","SingleComment","Border","Box","BoxSort","BoxDirection","Span","SpanWeight","SpanColor","TextArea","Button","ButtonColor","ButtonFontSize","useInput","Comment","commentLists","contents","onChangeContents","router","postId","query","console","log","map","comment","CENTER_SPACE_BETWEEN","L","GRAY","length","ROW","BOTTOM_SPACE_BETWEEN","S","MAIN","LIGHT_MAIN","array"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Router, { useRouter } from \"next/router\";\nimport propTypes from \"prop-types\";\n\nimport * as Styled from \"./style\";\nimport SingleComment from \"../SingleComment\";\nimport Border from \"../../molecules/Border\";\nimport Box, { BoxSort, BoxDirection } from \"../../molecules/Box\";\nimport Span, { SpanWeight, SpanColor } from \"../../atoms/Span\";\nimport TextArea from \"../../atoms/TextArea\";\nimport Button, { ButtonColor, ButtonFontSize } from \"../../atoms/Button\";\nimport useInput from \"../../../hooks/useInput\";\n\nconst Comment = ({ commentLists }) => {\n  const [contents, onChangeContents] = useInput(\"\");\n  const router = useRouter();\n  const { postId } = router.query;\n\n  return (\n    <React.Fragment>\n      {console.log(postId)}\n      {commentLists &&\n        commentLists.map((comment) => (\n          <React.Fragment>\n            <Border />\n            <SingleComment comment={comment} />\n          </React.Fragment>\n        ))}\n\n      <Styled.CommentContainer>\n        <Box sort={BoxSort.CENTER_SPACE_BETWEEN} mar={[0, 0, 1, 0]}>\n          <Span weight={SpanWeight.L}>호호호잼누쿤</Span>\n          <Span color={SpanColor.GRAY}>{contents.length}/1000</Span>\n        </Box>\n        <Box direction={BoxDirection.ROW} sort={BoxSort.BOTTOM_SPACE_BETWEEN}>\n          <TextArea\n            id=\"input-comment\"\n            value={contents}\n            onChange={onChangeContents}\n            height=\"60px\"\n            required\n          />\n          <Button\n            width=\"50px\"\n            height=\"34px\"\n            fontSize={ButtonFontSize.S}\n            fontColor={ButtonColor.MAIN}\n            backgroundColor={ButtonColor.LIGHT_MAIN}\n            shadow={true}\n          >\n            등록\n          </Button>\n        </Box>\n      </Styled.CommentContainer>\n    </React.Fragment>\n  );\n};\n\nComment.propTypes = {\n  commentLists: propTypes.array,\n};\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}