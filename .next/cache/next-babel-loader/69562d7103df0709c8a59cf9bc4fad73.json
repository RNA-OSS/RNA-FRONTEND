{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jojaegwon/Desktop/RNA Project/front/components/molecules/Td/index.jsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport * as Styled from \"./style\";\nimport Span, { SpanSize, SpanWeight, SpanColor } from \"../../atoms/Span\";\nimport { CalculateBox } from \"../../../utils\";\nexport var TextAlign = {\n  LEFT: \"left\",\n  CENTER: \"center\",\n  RIGHT: \"right\"\n};\n\nvar Td = function Td(_ref) {\n  var children = _ref.children,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? \"auto\" : _ref$width,\n      _ref$textAlign = _ref.textAlign,\n      textAlign = _ref$textAlign === void 0 ? TextAlign.CENTER : _ref$textAlign,\n      _ref$pad = _ref.pad,\n      pad = _ref$pad === void 0 ? [0] : _ref$pad,\n      onClick = _ref.onClick;\n  var padding = CalculateBox(pad);\n  return __jsx(Styled.Td, {\n    width: width,\n    textAlign: textAlign,\n    padding: padding,\n    onClick: onClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(Span, {\n    size: SpanSize.S,\n    weight: SpanWeight.M,\n    color: SpanColor.GRAY,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, children));\n};\n\n_c = Td;\nTd.propTypes = {\n  children: propTypes.node.isRequired,\n  width: propTypes.string,\n  textAlign: propTypes.string,\n  pad: propTypes.array,\n  onClick: propTypes.func\n};\nexport default Td;\n\nvar _c;\n\n$RefreshReg$(_c, \"Td\");","map":{"version":3,"sources":["/Users/jojaegwon/Desktop/RNA Project/front/components/molecules/Td/index.jsx"],"names":["React","propTypes","Styled","Span","SpanSize","SpanWeight","SpanColor","CalculateBox","TextAlign","LEFT","CENTER","RIGHT","Td","children","width","textAlign","pad","onClick","padding","S","M","GRAY","node","isRequired","string","array","func"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,SAAxB;AACA,OAAOC,IAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAsD,kBAAtD;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,OAAO,IAAMC,SAAS,GAAG;AACvBC,EAAAA,IAAI,EAAE,MADiB;AAEvBC,EAAAA,MAAM,EAAE,QAFe;AAGvBC,EAAAA,KAAK,EAAE;AAHgB,CAAlB;;AAMP,IAAMC,EAAE,GAAG,SAALA,EAAK,OAML;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,wBAJJC,KAII;AAAA,MAJJA,KAII,2BAJI,MAIJ;AAAA,4BAHJC,SAGI;AAAA,MAHJA,SAGI,+BAHQP,SAAS,CAACE,MAGlB;AAAA,sBAFJM,GAEI;AAAA,MAFJA,GAEI,yBAFE,CAAC,CAAD,CAEF;AAAA,MADJC,OACI,QADJA,OACI;AACJ,MAAMC,OAAO,GAAGX,YAAY,CAACS,GAAD,CAA5B;AAEA,SACE,MAAC,MAAD,CAAQ,EAAR;AACE,IAAA,KAAK,EAAEF,KADT;AAEE,IAAA,SAAS,EAAEC,SAFb;AAGE,IAAA,OAAO,EAAEG,OAHX;AAIE,IAAA,OAAO,EAAED,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEb,QAAQ,CAACe,CAArB;AAAwB,IAAA,MAAM,EAAEd,UAAU,CAACe,CAA3C;AAA8C,IAAA,KAAK,EAAEd,SAAS,CAACe,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,QADH,CANF,CADF;AAYD,CArBD;;KAAMD,E;AAuBNA,EAAE,CAACX,SAAH,GAAe;AACbY,EAAAA,QAAQ,EAAEZ,SAAS,CAACqB,IAAV,CAAeC,UADZ;AAEbT,EAAAA,KAAK,EAAEb,SAAS,CAACuB,MAFJ;AAGbT,EAAAA,SAAS,EAAEd,SAAS,CAACuB,MAHR;AAIbR,EAAAA,GAAG,EAAEf,SAAS,CAACwB,KAJF;AAKbR,EAAAA,OAAO,EAAEhB,SAAS,CAACyB;AALN,CAAf;AAQA,eAAed,EAAf","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\n\nimport * as Styled from \"./style\";\nimport Span, { SpanSize, SpanWeight, SpanColor } from \"../../atoms/Span\";\nimport { CalculateBox } from \"../../../utils\";\n\nexport const TextAlign = {\n  LEFT: \"left\",\n  CENTER: \"center\",\n  RIGHT: \"right\",\n};\n\nconst Td = ({\n  children,\n  width = \"auto\",\n  textAlign = TextAlign.CENTER,\n  pad = [0],\n  onClick,\n}) => {\n  const padding = CalculateBox(pad);\n\n  return (\n    <Styled.Td\n      width={width}\n      textAlign={textAlign}\n      padding={padding}\n      onClick={onClick}\n    >\n      <Span size={SpanSize.S} weight={SpanWeight.M} color={SpanColor.GRAY}>\n        {children}\n      </Span>\n    </Styled.Td>\n  );\n};\n\nTd.propTypes = {\n  children: propTypes.node.isRequired,\n  width: propTypes.string,\n  textAlign: propTypes.string,\n  pad: propTypes.array,\n  onClick: propTypes.func,\n};\n\nexport default Td;\n"]},"metadata":{},"sourceType":"module"}